{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dagio\\\\OneDrive\\\\Documents\\\\Projects\\\\Bingo_React\\\\src\\\\components\\\\GameDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport FOG from 'vanta/dist/vanta.fog.min';\nimport './GameStyles.css'; // Link to the CSS file\nimport GamePage from './GamePage'; // Assuming GamePage is in the same directory\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BINGO_LETTERS = ['B', 'I', 'N', 'G', 'O'];\nconst GameDashboard = () => {\n  _s();\n  const [selectedNumber, setSelectedNumber] = useState(null);\n  const [bingoCard, setBingoCard] = useState(null);\n  const [availableGames, setAvailableGames] = useState([]);\n  const [isCardSelected, setIsCardSelected] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [vantaEffect, setVantaEffect] = useState(null);\n  const [joiningGame, setJoiningGame] = useState(false); // Track game join status\n  const [joinCountdown, setJoinCountdown] = useState(5); // Countdown state\n  const vantaRef = useRef(null);\n  const bingoCardRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(FOG({\n        el: vantaRef.current,\n        THREE: THREE,\n        mouseControls: true,\n        touchControls: true,\n        gyroControls: false,\n        minHeight: 200.00,\n        minWidth: 200.00,\n        highlightColor: 0xB5FFE9,\n        lowlightColor: 0x8BE8CB,\n        baseColor: 0x50B2C0,\n        blurFactor: 0.90,\n        speed: 2.80,\n        zoom: 0.88\n      }));\n    }\n    return () => {\n      if (vantaEffect) vantaEffect.destroy();\n    };\n  }, [vantaEffect]);\n  useEffect(() => {\n    const fetchActiveGameUserDetail = async () => {\n      try {\n        const response = await axios.get('/game/');\n        console.log(\"Active Game User Detail:\", response.data);\n        // Update state with the response data if needed\n      } catch (error) {\n        console.error('Error fetching active game user detail:', error);\n      }\n    };\n    fetchActiveGameUserDetail();\n  }, []);\n  // Fetch available games from the backend\n  useEffect(() => {\n    const fetchAvailableGames = async () => {\n      try {\n        const response = await axios.get('/game/available-games');\n        console.log(\"Available Games:\", response.data.games);\n        setAvailableGames(response.data.games);\n      } catch (error) {\n        console.error('Error fetching available games:', error);\n      }\n    };\n    fetchAvailableGames();\n  }, []);\n  const fetchPendingGame = async () => {\n    try {\n      const response = await axios.get('/game/pending');\n      console.log(\"Pending Games:\", response.data);\n      // Update state with the response data if needed\n    } catch (error) {\n      console.error('Error fetching pending games:', error);\n    }\n  };\n\n  // Pagination logic\n  const handleNextPage = () => {\n    setCurrentPage(prevPage => prevPage === 2 ? 1 : prevPage + 1);\n  };\n  const handlePrevPage = () => {\n    setCurrentPage(prevPage => prevPage === 1 ? 2 : prevPage - 1);\n  };\n  const numbersToDisplay = currentPage === 1 ? Array.from({\n    length: 100\n  }, (_, i) => i + 1) : Array.from({\n    length: 100\n  }, (_, i) => i + 101);\n\n  // Handle selecting a number from the grid\n  const handleNumberClick = async number => {\n    setSelectedNumber(number);\n    try {\n      // Dynamic fetching of the Bingo card using selected number\n      const response = await axios.get(`/game/cards/${number}`);\n      const cardData = response.data.card;\n      console.log(\"Card Data:\", cardData);\n      const generatedCard = [[cardData.B1, cardData.B2, cardData.B3, cardData.B4, cardData.B5], [cardData.I1, cardData.I2, cardData.I3, cardData.I4, cardData.I5], [cardData.N1, cardData.N2, 'â˜…', cardData.N4, cardData.N5], [cardData.G1, cardData.G2, cardData.G3, cardData.G4, cardData.G5], [cardData.O1, cardData.O2, cardData.O3, cardData.O4, cardData.O5]];\n      setBingoCard(generatedCard);\n\n      // Scroll to the bingo card on mobile view\n      if (window.innerWidth <= 600) {\n        bingoCardRef.current.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    } catch (error) {\n      console.error(`Error fetching bingo card for number ${number}:`, error);\n    }\n  };\n\n  // Confirm card selection\n  const handleCardSelect = async () => {\n    if (selectedNumber) {\n      try {\n        // Send selected card to the backend\n        await axios.post('/game/select-card', {\n          cardId: selectedNumber\n        });\n        setIsCardSelected(true);\n      } catch (error) {\n        console.error('Error selecting card:', error);\n      }\n    } else {\n      alert('Please select a number from the grid first!');\n    }\n  };\n\n  // Start the game\n  const startGame = async () => {\n    if (isCardSelected) {\n      try {\n        await axios.post('/game/start');\n        setGameStarted(true);\n      } catch (error) {\n        console.error('Error starting game:', error);\n      }\n    } else {\n      alert('Please select a card first!');\n    }\n  };\n\n  // Join a game\n  const joinGame = async gameId => {\n    try {\n      setJoiningGame(true); // Set status to joining\n      await axios.post(`/game/join/${gameId}`);\n      alert('Joined the game successfully!');\n\n      // Countdown logic before prompting for card selection\n      const countdown = setInterval(() => {\n        setJoinCountdown(prev => {\n          if (prev === 1) {\n            clearInterval(countdown);\n            setJoiningGame(false); // End joining status\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } catch (error) {\n      console.error('Error joining game:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: joiningGame ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joining-status\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Joining game... Countdown: \", joinCountdown]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: vantaRef,\n      className: \"game-dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"welcome-text\",\n          children: \"Welcome to the Bingo Game!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this), !isCardSelected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Select a Number to Get Your Bingo Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"number-grid\",\n            children: numbersToDisplay.map(number => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `number-grid-item ${selectedNumber === number ? 'selected' : ''}`,\n              onClick: () => handleNumberClick(number),\n              children: number\n            }, number, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlePrevPage,\n              disabled: currentPage === 1,\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNextPage,\n              disabled: currentPage === 2,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-container\",\n        ref: bingoCardRef,\n        children: selectedNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bingo-card-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Your Bingo Card (Card #\", selectedNumber, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bingo-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bingo-header\",\n              children: BINGO_LETTERS.map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `bingo-header-cell ${letter}`,\n                children: letter\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bingo-body\",\n              children: bingoCard && bingoCard.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bingo-row\",\n                children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bingo-cell\",\n                  children: cell === 'â˜…' ? 'â˜…' : cell\n                }, cellIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 49\n                }, this))\n              }, rowIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCardSelect,\n            className: \"select-card-button\",\n            children: \"Confirm Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), isCardSelected && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startGame,\n            className: \"start-game-button\",\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"available-games-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Available Games\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: availableGames.map(game => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [game.name, \" - \", game.status, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => joinGame(game.id),\n              children: \"Join Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)]\n          }, game.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this);\n};\n_s(GameDashboard, \"GEk1pH62on5kLjRt4uZXrH/gk9w=\");\n_c = GameDashboard;\nexport default GameDashboard;\nvar _c;\n$RefreshReg$(_c, \"GameDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","THREE","FOG","GamePage","axios","jsxDEV","_jsxDEV","BINGO_LETTERS","GameDashboard","_s","selectedNumber","setSelectedNumber","bingoCard","setBingoCard","availableGames","setAvailableGames","isCardSelected","setIsCardSelected","currentPage","setCurrentPage","gameStarted","setGameStarted","vantaEffect","setVantaEffect","joiningGame","setJoiningGame","joinCountdown","setJoinCountdown","vantaRef","bingoCardRef","el","current","mouseControls","touchControls","gyroControls","minHeight","minWidth","highlightColor","lowlightColor","baseColor","blurFactor","speed","zoom","destroy","fetchActiveGameUserDetail","response","get","console","log","data","error","fetchAvailableGames","games","fetchPendingGame","handleNextPage","prevPage","handlePrevPage","numbersToDisplay","Array","from","length","_","i","handleNumberClick","number","cardData","card","generatedCard","B1","B2","B3","B4","B5","I1","I2","I3","I4","I5","N1","N2","N4","N5","G1","G2","G3","G4","G5","O1","O2","O3","O4","O5","window","innerWidth","scrollIntoView","behavior","handleCardSelect","post","cardId","alert","startGame","joinGame","gameId","countdown","setInterval","prev","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","onClick","disabled","letter","index","row","rowIndex","cell","cellIndex","game","name","status","id","_c","$RefreshReg$"],"sources":["C:/Users/dagio/OneDrive/Documents/Projects/Bingo_React/src/components/GameDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport FOG from 'vanta/dist/vanta.fog.min';\r\nimport './GameStyles.css'; // Link to the CSS file\r\nimport GamePage from './GamePage'; // Assuming GamePage is in the same directory\r\nimport axios from 'axios';\r\n\r\nconst BINGO_LETTERS = ['B', 'I', 'N', 'G', 'O'];\r\n\r\nconst GameDashboard = () => {\r\n    const [selectedNumber, setSelectedNumber] = useState(null);\r\n    const [bingoCard, setBingoCard] = useState(null);\r\n    const [availableGames, setAvailableGames] = useState([]);\r\n    const [isCardSelected, setIsCardSelected] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [gameStarted, setGameStarted] = useState(false);\r\n    const [vantaEffect, setVantaEffect] = useState(null);\r\n    const [joiningGame, setJoiningGame] = useState(false); // Track game join status\r\n    const [joinCountdown, setJoinCountdown] = useState(5); // Countdown state\r\n    const vantaRef = useRef(null);\r\n    const bingoCardRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!vantaEffect) {\r\n            setVantaEffect(\r\n                FOG({\r\n                    el: vantaRef.current,\r\n                    THREE: THREE,\r\n                    mouseControls: true,\r\n                    touchControls: true,\r\n                    gyroControls: false,\r\n                    minHeight: 200.00,\r\n                    minWidth: 200.00,\r\n                    highlightColor: 0xB5FFE9,\r\n                    lowlightColor: 0x8BE8CB,\r\n                    baseColor: 0x50B2C0,\r\n                    blurFactor: 0.90,\r\n                    speed: 2.80,\r\n                    zoom: 0.88\r\n                })\r\n            );\r\n        }\r\n        return () => {\r\n            if (vantaEffect) vantaEffect.destroy();\r\n        };\r\n    }, [vantaEffect]);\r\n    useEffect(() => {\r\n        const fetchActiveGameUserDetail = async () => {\r\n            try {\r\n                const response = await axios.get('/game/');\r\n                console.log(\"Active Game User Detail:\", response.data);\r\n                // Update state with the response data if needed\r\n            } catch (error) {\r\n                console.error('Error fetching active game user detail:', error);\r\n            }\r\n        };\r\n    \r\n        fetchActiveGameUserDetail();\r\n    }, []);\r\n    // Fetch available games from the backend\r\n    useEffect(() => {\r\n        const fetchAvailableGames = async () => {\r\n            try {\r\n                const response = await axios.get('/game/available-games');\r\n                console.log(\"Available Games:\", response.data.games);\r\n                setAvailableGames(response.data.games);\r\n            } catch (error) {\r\n                console.error('Error fetching available games:', error);\r\n            }\r\n        };\r\n\r\n        fetchAvailableGames();\r\n    }, []);\r\n    const fetchPendingGame = async () => {\r\n        try {\r\n            const response = await axios.get('/game/pending');\r\n            console.log(\"Pending Games:\", response.data);\r\n            // Update state with the response data if needed\r\n        } catch (error) {\r\n            console.error('Error fetching pending games:', error);\r\n        }\r\n    };\r\n    \r\n    \r\n    // Pagination logic\r\n    const handleNextPage = () => {\r\n        setCurrentPage((prevPage) => prevPage === 2 ? 1 : prevPage + 1);\r\n    };\r\n\r\n    const handlePrevPage = () => {\r\n        setCurrentPage((prevPage) => prevPage === 1 ? 2 : prevPage - 1);\r\n    };\r\n\r\n    const numbersToDisplay = currentPage === 1 ? Array.from({ length: 100 }, (_, i) => i + 1) : Array.from({ length: 100 }, (_, i) => i + 101);\r\n    \r\n    // Handle selecting a number from the grid\r\n    const handleNumberClick = async (number) => {\r\n        setSelectedNumber(number);\r\n        try {\r\n            // Dynamic fetching of the Bingo card using selected number\r\n            const response = await axios.get(`/game/cards/${number}`);\r\n            const cardData = response.data.card;\r\n            console.log(\"Card Data:\", cardData); \r\n            const generatedCard = [\r\n                [cardData.B1, cardData.B2, cardData.B3, cardData.B4, cardData.B5],\r\n                [cardData.I1, cardData.I2, cardData.I3, cardData.I4, cardData.I5],\r\n                [cardData.N1, cardData.N2, 'â˜…', cardData.N4, cardData.N5],\r\n                [cardData.G1, cardData.G2, cardData.G3, cardData.G4, cardData.G5],\r\n                [cardData.O1, cardData.O2, cardData.O3, cardData.O4, cardData.O5],\r\n            ];\r\n            setBingoCard(generatedCard);\r\n\r\n            // Scroll to the bingo card on mobile view\r\n            if (window.innerWidth <= 600) {\r\n                bingoCardRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        } catch (error) {\r\n            console.error(`Error fetching bingo card for number ${number}:`, error);\r\n        }\r\n    };\r\n\r\n    // Confirm card selection\r\n    const handleCardSelect = async () => {\r\n        if (selectedNumber) {\r\n            try {\r\n                // Send selected card to the backend\r\n                await axios.post('/game/select-card', { cardId: selectedNumber });\r\n                setIsCardSelected(true);\r\n            } catch (error) {\r\n                console.error('Error selecting card:', error);\r\n            }\r\n        } else {\r\n            alert('Please select a number from the grid first!');\r\n        }\r\n    };\r\n\r\n    // Start the game\r\n    const startGame = async () => {\r\n        if (isCardSelected) {\r\n            try {\r\n                await axios.post('/game/start');\r\n                setGameStarted(true);\r\n            } catch (error) {\r\n                console.error('Error starting game:', error);\r\n            }\r\n        } else {\r\n            alert('Please select a card first!');\r\n        }\r\n    };\r\n\r\n    // Join a game\r\n    const joinGame = async (gameId) => {\r\n        try {\r\n            setJoiningGame(true); // Set status to joining\r\n            await axios.post(`/game/join/${gameId}`);\r\n            alert('Joined the game successfully!');\r\n            \r\n            // Countdown logic before prompting for card selection\r\n            const countdown = setInterval(() => {\r\n                setJoinCountdown((prev) => {\r\n                    if (prev === 1) {\r\n                        clearInterval(countdown);\r\n                        setJoiningGame(false); // End joining status\r\n                    }\r\n                    return prev - 1;\r\n                });\r\n            }, 1000);\r\n        } catch (error) {\r\n            console.error('Error joining game:', error);\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n        {joiningGame ? (\r\n            <div className=\"joining-status\">\r\n                <h2>Joining game... Countdown: {joinCountdown}</h2>\r\n            </div>\r\n        ) : (\r\n            <div ref={vantaRef} className=\"game-dashboard-container\">  \r\n            <div className=\"left-container\">\r\n                <h1 className=\"welcome-text\">Welcome to the Bingo Game!</h1>\r\n                {!isCardSelected ? (\r\n                    <div className=\"container\">\r\n                        <h2>Select a Number to Get Your Bingo Card</h2>\r\n                        <div className=\"number-grid\">\r\n                            {numbersToDisplay.map((number) => (\r\n                                <div\r\n                                    key={number}\r\n                                    className={`number-grid-item ${selectedNumber === number ? 'selected' : ''}`}\r\n                                    onClick={() => handleNumberClick(number)}\r\n                                >\r\n                                    {number}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"pagination-buttons\">\r\n                            <button onClick={handlePrevPage} disabled={currentPage === 1}>\r\n                                Previous\r\n                            </button>\r\n                            <button onClick={handleNextPage} disabled={currentPage === 2}>\r\n                                Next\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n\r\n            <div className=\"right-container\" ref={bingoCardRef}>\r\n                {selectedNumber && (\r\n                    <div className=\"bingo-card-container\">\r\n                        <h3>Your Bingo Card (Card #{selectedNumber})</h3>\r\n                        <div className=\"bingo-card\">\r\n                            <div className=\"bingo-header\">\r\n                                {BINGO_LETTERS.map((letter, index) => (\r\n                                    <div key={index} className={`bingo-header-cell ${letter}`}>\r\n                                        {letter}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"bingo-body\">\r\n                                {bingoCard &&\r\n                                    bingoCard.map((row, rowIndex) => (\r\n                                        <div key={rowIndex} className=\"bingo-row\">\r\n                                            {row.map((cell, cellIndex) => (\r\n                                                <div key={cellIndex} className=\"bingo-cell\">\r\n                                                    {cell === 'â˜…' ? 'â˜…' : cell}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    ))}\r\n                            </div>\r\n                        </div>\r\n                        <button onClick={handleCardSelect} className=\"select-card-button\">\r\n                            Confirm Card\r\n                        </button>\r\n                        {isCardSelected && (\r\n                            <button onClick={startGame} className=\"start-game-button\">\r\n                                Start Game\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"available-games-container\">\r\n                <h2>Available Games</h2>\r\n                <ul>\r\n                    {availableGames.map((game) => (\r\n                        <li key={game.id}>\r\n                            {game.name} - {game.status}\r\n                            <button onClick={() => joinGame(game.id)}>Join Game</button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        )}\r\n    </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default GameDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,0BAA0B;AAC1C,OAAO,kBAAkB,CAAC,CAAC;AAC3B,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAE/C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACvD,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACvD,MAAM8B,QAAQ,GAAG5B,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM6B,YAAY,GAAG7B,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACuB,WAAW,EAAE;MACdC,cAAc,CACVrB,GAAG,CAAC;QACA4B,EAAE,EAAEF,QAAQ,CAACG,OAAO;QACpB9B,KAAK,EAAEA,KAAK;QACZ+B,aAAa,EAAE,IAAI;QACnBC,aAAa,EAAE,IAAI;QACnBC,YAAY,EAAE,KAAK;QACnBC,SAAS,EAAE,MAAM;QACjBC,QAAQ,EAAE,MAAM;QAChBC,cAAc,EAAE,QAAQ;QACxBC,aAAa,EAAE,QAAQ;QACvBC,SAAS,EAAE,QAAQ;QACnBC,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE,IAAI;QACXC,IAAI,EAAE;MACV,CAAC,CACL,CAAC;IACL;IACA,OAAO,MAAM;MACT,IAAIpB,WAAW,EAAEA,WAAW,CAACqB,OAAO,CAAC,CAAC;IAC1C,CAAC;EACL,CAAC,EAAE,CAACrB,WAAW,CAAC,CAAC;EACjBvB,SAAS,CAAC,MAAM;IACZ,MAAM6C,yBAAyB,GAAG,MAAAA,CAAA,KAAY;MAC1C,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMzC,KAAK,CAAC0C,GAAG,CAAC,QAAQ,CAAC;QAC1CC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,QAAQ,CAACI,IAAI,CAAC;QACtD;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MACnE;IACJ,CAAC;IAEDN,yBAAyB,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EACN;EACA7C,SAAS,CAAC,MAAM;IACZ,MAAMoD,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACA,MAAMN,QAAQ,GAAG,MAAMzC,KAAK,CAAC0C,GAAG,CAAC,uBAAuB,CAAC;QACzDC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACI,IAAI,CAACG,KAAK,CAAC;QACpDrC,iBAAiB,CAAC8B,QAAQ,CAACI,IAAI,CAACG,KAAK,CAAC;MAC1C,CAAC,CAAC,OAAOF,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MAC3D;IACJ,CAAC;IAEDC,mBAAmB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EACN,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA,MAAMR,QAAQ,GAAG,MAAMzC,KAAK,CAAC0C,GAAG,CAAC,eAAe,CAAC;MACjDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAC5C;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD;EACJ,CAAC;;EAGD;EACA,MAAMI,cAAc,GAAGA,CAAA,KAAM;IACzBnC,cAAc,CAAEoC,QAAQ,IAAKA,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAGA,QAAQ,GAAG,CAAC,CAAC;EACnE,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzBrC,cAAc,CAAEoC,QAAQ,IAAKA,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAGA,QAAQ,GAAG,CAAC,CAAC;EACnE,CAAC;EAED,MAAME,gBAAgB,GAAGvC,WAAW,KAAK,CAAC,GAAGwC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAI,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,GAAGJ,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAI,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,GAAG,CAAC;;EAE1I;EACA,MAAMC,iBAAiB,GAAG,MAAOC,MAAM,IAAK;IACxCrD,iBAAiB,CAACqD,MAAM,CAAC;IACzB,IAAI;MACA;MACA,MAAMnB,QAAQ,GAAG,MAAMzC,KAAK,CAAC0C,GAAG,CAAC,eAAekB,MAAM,EAAE,CAAC;MACzD,MAAMC,QAAQ,GAAGpB,QAAQ,CAACI,IAAI,CAACiB,IAAI;MACnCnB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEiB,QAAQ,CAAC;MACnC,MAAME,aAAa,GAAG,CAClB,CAACF,QAAQ,CAACG,EAAE,EAAEH,QAAQ,CAACI,EAAE,EAAEJ,QAAQ,CAACK,EAAE,EAAEL,QAAQ,CAACM,EAAE,EAAEN,QAAQ,CAACO,EAAE,CAAC,EACjE,CAACP,QAAQ,CAACQ,EAAE,EAAER,QAAQ,CAACS,EAAE,EAAET,QAAQ,CAACU,EAAE,EAAEV,QAAQ,CAACW,EAAE,EAAEX,QAAQ,CAACY,EAAE,CAAC,EACjE,CAACZ,QAAQ,CAACa,EAAE,EAAEb,QAAQ,CAACc,EAAE,EAAE,GAAG,EAAEd,QAAQ,CAACe,EAAE,EAAEf,QAAQ,CAACgB,EAAE,CAAC,EACzD,CAAChB,QAAQ,CAACiB,EAAE,EAAEjB,QAAQ,CAACkB,EAAE,EAAElB,QAAQ,CAACmB,EAAE,EAAEnB,QAAQ,CAACoB,EAAE,EAAEpB,QAAQ,CAACqB,EAAE,CAAC,EACjE,CAACrB,QAAQ,CAACsB,EAAE,EAAEtB,QAAQ,CAACuB,EAAE,EAAEvB,QAAQ,CAACwB,EAAE,EAAExB,QAAQ,CAACyB,EAAE,EAAEzB,QAAQ,CAAC0B,EAAE,CAAC,CACpE;MACD9E,YAAY,CAACsD,aAAa,CAAC;;MAE3B;MACA,IAAIyB,MAAM,CAACC,UAAU,IAAI,GAAG,EAAE;QAC1BhE,YAAY,CAACE,OAAO,CAAC+D,cAAc,CAAC;UAAEC,QAAQ,EAAE;QAAS,CAAC,CAAC;MAC/D;IACJ,CAAC,CAAC,OAAO7C,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,wCAAwCc,MAAM,GAAG,EAAEd,KAAK,CAAC;IAC3E;EACJ,CAAC;;EAED;EACA,MAAM8C,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAItF,cAAc,EAAE;MAChB,IAAI;QACA;QACA,MAAMN,KAAK,CAAC6F,IAAI,CAAC,mBAAmB,EAAE;UAAEC,MAAM,EAAExF;QAAe,CAAC,CAAC;QACjEO,iBAAiB,CAAC,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOiC,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC,MAAM;MACHiD,KAAK,CAAC,6CAA6C,CAAC;IACxD;EACJ,CAAC;;EAED;EACA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAIpF,cAAc,EAAE;MAChB,IAAI;QACA,MAAMZ,KAAK,CAAC6F,IAAI,CAAC,aAAa,CAAC;QAC/B5E,cAAc,CAAC,IAAI,CAAC;MACxB,CAAC,CAAC,OAAO6B,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC,MAAM;MACHiD,KAAK,CAAC,6BAA6B,CAAC;IACxC;EACJ,CAAC;;EAED;EACA,MAAME,QAAQ,GAAG,MAAOC,MAAM,IAAK;IAC/B,IAAI;MACA7E,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;MACtB,MAAMrB,KAAK,CAAC6F,IAAI,CAAC,cAAcK,MAAM,EAAE,CAAC;MACxCH,KAAK,CAAC,+BAA+B,CAAC;;MAEtC;MACA,MAAMI,SAAS,GAAGC,WAAW,CAAC,MAAM;QAChC7E,gBAAgB,CAAE8E,IAAI,IAAK;UACvB,IAAIA,IAAI,KAAK,CAAC,EAAE;YACZC,aAAa,CAACH,SAAS,CAAC;YACxB9E,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;UAC3B;UACA,OAAOgF,IAAI,GAAG,CAAC;QACnB,CAAC,CAAC;MACN,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,CAAC,OAAOvD,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C;EACJ,CAAC;EACD,oBACI5C,OAAA;IAAAqG,QAAA,EACCnF,WAAW,gBACRlB,OAAA;MAAKsG,SAAS,EAAC,gBAAgB;MAAAD,QAAA,eAC3BrG,OAAA;QAAAqG,QAAA,GAAI,6BAA2B,EAACjF,aAAa;MAAA;QAAAmF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,gBAEN1G,OAAA;MAAK2G,GAAG,EAAErF,QAAS;MAACgF,SAAS,EAAC,0BAA0B;MAAAD,QAAA,gBACxDrG,OAAA;QAAKsG,SAAS,EAAC,gBAAgB;QAAAD,QAAA,gBAC3BrG,OAAA;UAAIsG,SAAS,EAAC,cAAc;UAAAD,QAAA,EAAC;QAA0B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC3D,CAAChG,cAAc,gBACZV,OAAA;UAAKsG,SAAS,EAAC,WAAW;UAAAD,QAAA,gBACtBrG,OAAA;YAAAqG,QAAA,EAAI;UAAsC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/C1G,OAAA;YAAKsG,SAAS,EAAC,aAAa;YAAAD,QAAA,EACvBlD,gBAAgB,CAACyD,GAAG,CAAElD,MAAM,iBACzB1D,OAAA;cAEIsG,SAAS,EAAE,oBAAoBlG,cAAc,KAAKsD,MAAM,GAAG,UAAU,GAAG,EAAE,EAAG;cAC7EmD,OAAO,EAAEA,CAAA,KAAMpD,iBAAiB,CAACC,MAAM,CAAE;cAAA2C,QAAA,EAExC3C;YAAM,GAJFA,MAAM;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKV,CACR;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACN1G,OAAA;YAAKsG,SAAS,EAAC,oBAAoB;YAAAD,QAAA,gBAC/BrG,OAAA;cAAQ6G,OAAO,EAAE3D,cAAe;cAAC4D,QAAQ,EAAElG,WAAW,KAAK,CAAE;cAAAyF,QAAA,EAAC;YAE9D;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT1G,OAAA;cAAQ6G,OAAO,EAAE7D,cAAe;cAAC8D,QAAQ,EAAElG,WAAW,KAAK,CAAE;cAAAyF,QAAA,EAAC;YAE9D;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,GACN,IAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAEN1G,OAAA;QAAKsG,SAAS,EAAC,iBAAiB;QAACK,GAAG,EAAEpF,YAAa;QAAA8E,QAAA,EAC9CjG,cAAc,iBACXJ,OAAA;UAAKsG,SAAS,EAAC,sBAAsB;UAAAD,QAAA,gBACjCrG,OAAA;YAAAqG,QAAA,GAAI,yBAAuB,EAACjG,cAAc,EAAC,GAAC;UAAA;YAAAmG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjD1G,OAAA;YAAKsG,SAAS,EAAC,YAAY;YAAAD,QAAA,gBACvBrG,OAAA;cAAKsG,SAAS,EAAC,cAAc;cAAAD,QAAA,EACxBpG,aAAa,CAAC2G,GAAG,CAAC,CAACG,MAAM,EAAEC,KAAK,kBAC7BhH,OAAA;gBAAiBsG,SAAS,EAAE,qBAAqBS,MAAM,EAAG;gBAAAV,QAAA,EACrDU;cAAM,GADDC,KAAK;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEV,CACR;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eACN1G,OAAA;cAAKsG,SAAS,EAAC,YAAY;cAAAD,QAAA,EACtB/F,SAAS,IACNA,SAAS,CAACsG,GAAG,CAAC,CAACK,GAAG,EAAEC,QAAQ,kBACxBlH,OAAA;gBAAoBsG,SAAS,EAAC,WAAW;gBAAAD,QAAA,EACpCY,GAAG,CAACL,GAAG,CAAC,CAACO,IAAI,EAAEC,SAAS,kBACrBpH,OAAA;kBAAqBsG,SAAS,EAAC,YAAY;kBAAAD,QAAA,EACtCc,IAAI,KAAK,GAAG,GAAG,GAAG,GAAGA;gBAAI,GADpBC,SAAS;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEd,CACR;cAAC,GALIQ,QAAQ;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAMb,CACR;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACN1G,OAAA;YAAQ6G,OAAO,EAAEnB,gBAAiB;YAACY,SAAS,EAAC,oBAAoB;YAAAD,QAAA,EAAC;UAElE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACRhG,cAAc,iBACXV,OAAA;YAAQ6G,OAAO,EAAEf,SAAU;YAACQ,SAAS,EAAC,mBAAmB;YAAAD,QAAA,EAAC;UAE1D;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACX;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MACR;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAEN1G,OAAA;QAAKsG,SAAS,EAAC,2BAA2B;QAAAD,QAAA,gBACtCrG,OAAA;UAAAqG,QAAA,EAAI;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxB1G,OAAA;UAAAqG,QAAA,EACK7F,cAAc,CAACoG,GAAG,CAAES,IAAI,iBACrBrH,OAAA;YAAAqG,QAAA,GACKgB,IAAI,CAACC,IAAI,EAAC,KAAG,EAACD,IAAI,CAACE,MAAM,eAC1BvH,OAAA;cAAQ6G,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAACsB,IAAI,CAACG,EAAE,CAAE;cAAAnB,QAAA,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GAFvDW,IAAI,CAACG,EAAE;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGZ,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGV,CAAC;AAACvG,EAAA,CA3PID,aAAa;AAAAuH,EAAA,GAAbvH,aAAa;AA6PnB,eAAeA,aAAa;AAAC,IAAAuH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}