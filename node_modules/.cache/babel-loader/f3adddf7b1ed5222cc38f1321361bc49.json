{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dagio\\\\OneDrive\\\\Documents\\\\Projects\\\\Bingo_React\\\\src\\\\components\\\\GameDashboard.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport FOG from 'vanta/dist/vanta.fog.min';\nimport './GameStyles.css'; // Link to the CSS file\nimport { useHistory } from 'react-router-dom'; // Import useHistory\nimport axios from '../api/axios';\nconst BINGO_LETTERS = ['B', 'I', 'N', 'G', 'O'];\nconst GameDashboard = () => {\n  const [selectedNumber, setSelectedNumber] = useState(null);\n  const [bingoCard, setBingoCard] = useState(null);\n  const [availableGames, setAvailableGames] = useState([]);\n  const [isCardSelected, setIsCardSelected] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [vantaEffect, setVantaEffect] = useState(null);\n  const [joiningGame, setJoiningGame] = useState(false); // Track game join status\n  const [joinCountdown, setJoinCountdown] = useState(5); // Countdown state\n  const vantaRef = useRef(null);\n  const bingoCardRef = useRef(null);\n  const history = useHistory(); // Initialize useHistory\n\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(FOG({\n        el: vantaRef.current,\n        THREE: THREE,\n        mouseControls: true,\n        touchControls: true,\n        gyroControls: false,\n        minHeight: 200.00,\n        minWidth: 200.00,\n        highlightColor: 0xB5FFE9,\n        lowlightColor: 0x8BE8CB,\n        baseColor: 0x50B2C0,\n        blurFactor: 0.90,\n        speed: 2.80,\n        zoom: 0.88\n      }));\n    }\n    return () => {\n      if (vantaEffect) vantaEffect.destroy();\n    };\n  }, [vantaEffect]);\n\n  // Fetch available games from the backend\n  useEffect(() => {\n    const fetchAvailableGames = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Adjust this line based on where your token is stored\n        const response = await axios.get('/game/availableGames', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"Available Games:\", response.data.games);\n        setAvailableGames(response.data.games);\n      } catch (error) {\n        console.error('Error fetching available games:', error);\n      }\n    };\n    fetchAvailableGames();\n  }, []);\n\n  // Pagination logic\n  const handleNextPage = () => {\n    setCurrentPage(prevPage => prevPage === 2 ? 1 : prevPage + 1);\n  };\n  const handlePrevPage = () => {\n    setCurrentPage(prevPage => prevPage === 1 ? 2 : prevPage - 1);\n  };\n  const numbersToDisplay = currentPage === 1 ? Array.from({\n    length: 100\n  }, (_, i) => i + 1) : Array.from({\n    length: 100\n  }, (_, i) => i + 101);\n\n  // Handle selecting a number from the grid\n  const handleNumberClick = async number => {\n    setSelectedNumber(number);\n    try {\n      console.log(`Fetching card for number: ${number}`); // Debugging log\n      // Dynamic fetching of the Bingo card using selected number\n      const response = await axios.get(`/game/cards/${number}`);\n      console.log('Response:', response); // Debugging log\n      const cardData = response.data.card;\n      console.log(\"Card Data:\", cardData);\n      const generatedCard = [[cardData.B1, cardData.B2, cardData.B3, cardData.B4, cardData.B5], [cardData.I1, cardData.I2, cardData.I3, cardData.I4, cardData.I5], [cardData.N1, cardData.N2, 'â˜…', cardData.N4, cardData.N5], [cardData.G1, cardData.G2, cardData.G3, cardData.G4, cardData.G5], [cardData.O1, cardData.O2, cardData.O3, cardData.O4, cardData.O5]];\n      setBingoCard(generatedCard);\n\n      // Scroll to the bingo card on mobile view\n      if (window.innerWidth <= 600) {\n        bingoCardRef.current.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    } catch (error) {\n      console.error(`Error fetching bingo card for number ${number}:`, error);\n    }\n  };\n\n  // Confirm card selection\n  const handleCardSelect = async () => {\n    if (selectedNumber) {\n      try {\n        // Send selected card to the backend\n        await axios.post('/game/select-card', {\n          cardId: selectedNumber\n        });\n        setIsCardSelected(true);\n        history.push('/game'); // Redirect to GamePage\n      } catch (error) {\n        console.error('Error selecting card:', error);\n      }\n    } else {\n      alert('Please select a number from the grid first!');\n    }\n  };\n\n  // Start the game\n  const startGame = async () => {\n    if (isCardSelected) {\n      try {\n        await axios.post('/game/start');\n        setGameStarted(true);\n      } catch (error) {\n        console.error('Error starting game:', error);\n      }\n    } else {\n      alert('Please select a card first!');\n    }\n  };\n\n  // Join a game\n  const joinGame = async gameId => {\n    try {\n      setJoiningGame(true); // Set status to joining\n      await axios.post(`/game/join/${gameId}`);\n      alert('Joined the game successfully!');\n\n      // Countdown logic before prompting for card selection\n      const countdown = setInterval(() => {\n        setJoinCountdown(prev => {\n          if (prev === 1) {\n            clearInterval(countdown);\n            setJoiningGame(false); // End joining status\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } catch (error) {\n      console.error('Error joining game:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, joiningGame ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"joining-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, \"Joining game... Countdown: \", joinCountdown)) : /*#__PURE__*/React.createElement(\"div\", {\n    ref: vantaRef,\n    className: \"game-dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"welcome-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, \"Welcome to the Bingo Game!\"), !isCardSelected ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, \"Select a Number to Get Your Bingo Card\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"number-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }, numbersToDisplay.map(number => /*#__PURE__*/React.createElement(\"div\", {\n    key: number,\n    className: `number-grid-item ${selectedNumber === number ? 'selected' : ''}`,\n    onClick: () => handleNumberClick(number),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 33\n    }\n  }, number))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePrevPage,\n    disabled: currentPage === 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNextPage,\n    disabled: currentPage === 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }, \"Next\"))) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-container\",\n    ref: bingoCardRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, selectedNumber && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bingo-card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, \"Your Bingo Card (Card #\", selectedNumber, \")\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bingo-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bingo-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }, BINGO_LETTERS.map((letter, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `bingo-header-cell ${letter}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 37\n    }\n  }, letter))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bingo-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 29\n    }\n  }, bingoCard && bingoCard.map((row, rowIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    key: rowIndex,\n    className: \"bingo-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 41\n    }\n  }, row.map((cell, cellIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    key: cellIndex,\n    className: \"bingo-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 49\n    }\n  }, cell === 'â˜…' ? 'â˜…' : cell)))))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCardSelect,\n    className: \"select-card-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }, \"Confirm Card\"), isCardSelected && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startGame,\n    className: \"start-game-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }, \"Start Game\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"available-games-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, \"Available Games\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, availableGames.map(game => /*#__PURE__*/React.createElement(\"li\", {\n    key: game.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  }, game.name, \" - \", game.status, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => joinGame(game.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 29\n    }\n  }, \"Join Game\")))))));\n};\nexport default GameDashboard;","map":{"version":3,"names":["React","useState","useEffect","useRef","THREE","FOG","useHistory","axios","BINGO_LETTERS","GameDashboard","selectedNumber","setSelectedNumber","bingoCard","setBingoCard","availableGames","setAvailableGames","isCardSelected","setIsCardSelected","currentPage","setCurrentPage","gameStarted","setGameStarted","vantaEffect","setVantaEffect","joiningGame","setJoiningGame","joinCountdown","setJoinCountdown","vantaRef","bingoCardRef","history","el","current","mouseControls","touchControls","gyroControls","minHeight","minWidth","highlightColor","lowlightColor","baseColor","blurFactor","speed","zoom","destroy","fetchAvailableGames","token","localStorage","getItem","response","get","headers","Authorization","console","log","data","games","error","handleNextPage","prevPage","handlePrevPage","numbersToDisplay","Array","from","length","_","i","handleNumberClick","number","cardData","card","generatedCard","B1","B2","B3","B4","B5","I1","I2","I3","I4","I5","N1","N2","N4","N5","G1","G2","G3","G4","G5","O1","O2","O3","O4","O5","window","innerWidth","scrollIntoView","behavior","handleCardSelect","post","cardId","push","alert","startGame","joinGame","gameId","countdown","setInterval","prev","clearInterval","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","map","key","onClick","disabled","letter","index","row","rowIndex","cell","cellIndex","game","id","name","status"],"sources":["C:/Users/dagio/OneDrive/Documents/Projects/Bingo_React/src/components/GameDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport FOG from 'vanta/dist/vanta.fog.min';\r\nimport './GameStyles.css'; // Link to the CSS file\r\nimport { useHistory } from 'react-router-dom'; // Import useHistory\r\nimport axios from '../api/axios';\r\n\r\nconst BINGO_LETTERS = ['B', 'I', 'N', 'G', 'O'];\r\n\r\nconst GameDashboard = () => {\r\n    const [selectedNumber, setSelectedNumber] = useState(null);\r\n    const [bingoCard, setBingoCard] = useState(null);\r\n    const [availableGames, setAvailableGames] = useState([]);\r\n    const [isCardSelected, setIsCardSelected] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [gameStarted, setGameStarted] = useState(false);\r\n    const [vantaEffect, setVantaEffect] = useState(null);\r\n    const [joiningGame, setJoiningGame] = useState(false); // Track game join status\r\n    const [joinCountdown, setJoinCountdown] = useState(5); // Countdown state\r\n    const vantaRef = useRef(null);\r\n    const bingoCardRef = useRef(null);\r\n    const history = useHistory(); // Initialize useHistory\r\n\r\n    useEffect(() => {\r\n        if (!vantaEffect) {\r\n            setVantaEffect(\r\n                FOG({\r\n                    el: vantaRef.current,\r\n                    THREE: THREE,\r\n                    mouseControls: true,\r\n                    touchControls: true,\r\n                    gyroControls: false,\r\n                    minHeight: 200.00,\r\n                    minWidth: 200.00,\r\n                    highlightColor: 0xB5FFE9,\r\n                    lowlightColor: 0x8BE8CB,\r\n                    baseColor: 0x50B2C0,\r\n                    blurFactor: 0.90,\r\n                    speed: 2.80,\r\n                    zoom: 0.88\r\n                })\r\n            );\r\n        }\r\n        return () => {\r\n            if (vantaEffect) vantaEffect.destroy();\r\n        };\r\n    }, [vantaEffect]);\r\n\r\n    // Fetch available games from the backend\r\n    useEffect(() => {\r\n        const fetchAvailableGames = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token'); // Adjust this line based on where your token is stored\r\n                const response = await axios.get('/game/availableGames', {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                });\r\n                console.log(\"Available Games:\", response.data.games);\r\n                setAvailableGames(response.data.games);\r\n            } catch (error) {\r\n                console.error('Error fetching available games:', error);\r\n            }\r\n        };\r\n\r\n        fetchAvailableGames();\r\n    }, []);\r\n    \r\n    // Pagination logic\r\n    const handleNextPage = () => {\r\n        setCurrentPage((prevPage) => prevPage === 2 ? 1 : prevPage + 1);\r\n    };\r\n\r\n    const handlePrevPage = () => {\r\n        setCurrentPage((prevPage) => prevPage === 1 ? 2 : prevPage - 1);\r\n    };\r\n\r\n    const numbersToDisplay = currentPage === 1 ? Array.from({ length: 100 }, (_, i) => i + 1) : Array.from({ length: 100 }, (_, i) => i + 101);\r\n\r\n    // Handle selecting a number from the grid\r\n    const handleNumberClick = async (number) => {\r\n        setSelectedNumber(number);\r\n        try {\r\n            console.log(`Fetching card for number: ${number}`); // Debugging log\r\n            // Dynamic fetching of the Bingo card using selected number\r\n            const response = await axios.get(`/game/cards/${number}`);\r\n            console.log('Response:', response); // Debugging log\r\n            const cardData = response.data.card;\r\n            console.log(\"Card Data:\", cardData); \r\n            const generatedCard = [\r\n                [cardData.B1, cardData.B2, cardData.B3, cardData.B4, cardData.B5],\r\n                [cardData.I1, cardData.I2, cardData.I3, cardData.I4, cardData.I5],\r\n                [cardData.N1, cardData.N2, 'â˜…', cardData.N4, cardData.N5],\r\n                [cardData.G1, cardData.G2, cardData.G3, cardData.G4, cardData.G5],\r\n                [cardData.O1, cardData.O2, cardData.O3, cardData.O4, cardData.O5],\r\n            ];\r\n            setBingoCard(generatedCard);\r\n\r\n            // Scroll to the bingo card on mobile view\r\n            if (window.innerWidth <= 600) {\r\n                bingoCardRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        } catch (error) {\r\n            console.error(`Error fetching bingo card for number ${number}:`, error);\r\n        }\r\n    };\r\n\r\n    // Confirm card selection\r\n    const handleCardSelect = async () => {\r\n        if (selectedNumber) {\r\n            try {\r\n                // Send selected card to the backend\r\n                await axios.post('/game/select-card', { cardId: selectedNumber });\r\n                setIsCardSelected(true);\r\n                history.push('/game'); // Redirect to GamePage\r\n            } catch (error) {\r\n                console.error('Error selecting card:', error);\r\n            }\r\n        } else {\r\n            alert('Please select a number from the grid first!');\r\n        }\r\n    };\r\n\r\n    // Start the game\r\n    const startGame = async () => {\r\n        if (isCardSelected) {\r\n            try {\r\n                await axios.post('/game/start');\r\n                setGameStarted(true);\r\n            } catch (error) {\r\n                console.error('Error starting game:', error);\r\n            }\r\n        } else {\r\n            alert('Please select a card first!');\r\n        }\r\n    };\r\n\r\n    // Join a game\r\n    const joinGame = async (gameId) => {\r\n        try {\r\n            setJoiningGame(true); // Set status to joining\r\n            await axios.post(`/game/join/${gameId}`);\r\n            alert('Joined the game successfully!');\r\n            \r\n            // Countdown logic before prompting for card selection\r\n            const countdown = setInterval(() => {\r\n                setJoinCountdown((prev) => {\r\n                    if (prev === 1) {\r\n                        clearInterval(countdown);\r\n                        setJoiningGame(false); // End joining status\r\n                    }\r\n                    return prev - 1;\r\n                });\r\n            }, 1000);\r\n        } catch (error) {\r\n            console.error('Error joining game:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        {joiningGame ? (\r\n            <div className=\"joining-status\">\r\n                <h2>Joining game... Countdown: {joinCountdown}</h2>\r\n            </div>\r\n        ) : (\r\n            <div ref={vantaRef} className=\"game-dashboard-container\">  \r\n            <div className=\"left-container\">\r\n                <h1 className=\"welcome-text\">Welcome to the Bingo Game!</h1>\r\n                {!isCardSelected ? (\r\n                    <div className=\"container\">\r\n                        <h2>Select a Number to Get Your Bingo Card</h2>\r\n                        <div className=\"number-grid\">\r\n                            {numbersToDisplay.map((number) => (\r\n                                <div\r\n                                    key={number}\r\n                                    className={`number-grid-item ${selectedNumber === number ? 'selected' : ''}`}\r\n                                    onClick={() => handleNumberClick(number)}\r\n                                >\r\n                                    {number}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"pagination-buttons\">\r\n                            <button onClick={handlePrevPage} disabled={currentPage === 1}>\r\n                                Previous\r\n                            </button>\r\n                            <button onClick={handleNextPage} disabled={currentPage === 2}>\r\n                                Next\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n\r\n            <div className=\"right-container\" ref={bingoCardRef}>\r\n                {selectedNumber && (\r\n                    <div className=\"bingo-card-container\">\r\n                        <h3>Your Bingo Card (Card #{selectedNumber})</h3>\r\n                        <div className=\"bingo-card\">\r\n                            <div className=\"bingo-header\">\r\n                                {BINGO_LETTERS.map((letter, index) => (\r\n                                    <div key={index} className={`bingo-header-cell ${letter}`}>\r\n                                        {letter}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"bingo-body\">\r\n                                {bingoCard &&\r\n                                    bingoCard.map((row, rowIndex) => (\r\n                                        <div key={rowIndex} className=\"bingo-row\">\r\n                                            {row.map((cell, cellIndex) => (\r\n                                                <div key={cellIndex} className=\"bingo-cell\">\r\n                                                    {cell === 'â˜…' ? 'â˜…' : cell}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    ))}\r\n                            </div>\r\n                        </div>\r\n                        <button onClick={handleCardSelect} className=\"select-card-button\">\r\n                            Confirm Card\r\n                        </button>\r\n                        {isCardSelected && (\r\n                            <button onClick={startGame} className=\"start-game-button\">\r\n                                Start Game\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"available-games-container\">\r\n                <h2>Available Games</h2>\r\n                <ul>\r\n                    {availableGames.map((game) => (\r\n                        <li key={game.id}>\r\n                            {game.name} - {game.status}\r\n                            <button onClick={() => joinGame(game.id)}>Join Game</button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        )}\r\n    </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default GameDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}