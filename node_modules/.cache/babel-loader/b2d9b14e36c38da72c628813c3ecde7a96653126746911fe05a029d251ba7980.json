{"ast":null,"code":"import axios from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\nimport instance from './path_to_your_axios_instance'; // Adjust the import according to your file structure\n\ndescribe('Axios Interceptor Tests', () => {\n  let mock;\n  beforeEach(() => {\n    mock = new MockAdapter(instance);\n    localStorage.clear();\n  });\n  afterEach(() => {\n    mock.restore();\n  });\n  it('should include the JWT token in the Authorization header if the token is present in localStorage', async () => {\n    localStorage.setItem('token', 'test-token');\n    mock.onGet('/test').reply(200);\n    const response = await instance.get('/test');\n    expect(response.config.headers.Authorization).toBe('Bearer test-token');\n  });\n  it('should not include the Authorization header if the token is not present in localStorage', async () => {\n    mock.onGet('/test').reply(200);\n    const response = await instance.get('/test');\n    expect(response.config.headers.Authorization).toBeUndefined();\n  });\n  it('should handle errors in the request interceptor and reject the promise', async () => {\n    const error = new Error('Test error');\n    instance.interceptors.request.use(() => {\n      throw error;\n    });\n    await expect(instance.get('/test')).rejects.toThrow('Test error');\n  });\n});","map":{"version":3,"names":["axios","MockAdapter","instance","describe","mock","beforeEach","localStorage","clear","afterEach","restore","it","setItem","onGet","reply","response","get","expect","config","headers","Authorization","toBe","toBeUndefined","error","Error","interceptors","request","use","rejects","toThrow"],"sources":["C:/Users/dagio/OneDrive/Documents/Projects/Bingo_React/src/api/axios.js"],"sourcesContent":["import axios from 'axios';\r\nimport MockAdapter from 'axios-mock-adapter';\r\nimport instance from './path_to_your_axios_instance'; // Adjust the import according to your file structure\r\n\r\ndescribe('Axios Interceptor Tests', () => {\r\n  let mock;\r\n\r\n  beforeEach(() => {\r\n    mock = new MockAdapter(instance);\r\n    localStorage.clear();\r\n  });\r\n\r\n  afterEach(() => {\r\n    mock.restore();\r\n  });\r\n\r\n  it('should include the JWT token in the Authorization header if the token is present in localStorage', async () => {\r\n    localStorage.setItem('token', 'test-token');\r\n    mock.onGet('/test').reply(200);\r\n\r\n    const response = await instance.get('/test');\r\n\r\n    expect(response.config.headers.Authorization).toBe('Bearer test-token');\r\n  });\r\n\r\n  it('should not include the Authorization header if the token is not present in localStorage', async () => {\r\n    mock.onGet('/test').reply(200);\r\n\r\n    const response = await instance.get('/test');\r\n\r\n    expect(response.config.headers.Authorization).toBeUndefined();\r\n  });\r\n\r\n  it('should handle errors in the request interceptor and reject the promise', async () => {\r\n    const error = new Error('Test error');\r\n    instance.interceptors.request.use(() => {\r\n      throw error;\r\n    });\r\n\r\n    await expect(instance.get('/test')).rejects.toThrow('Test error');\r\n  });\r\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,QAAQ,MAAM,+BAA+B,CAAC,CAAC;;AAEtDC,QAAQ,CAAC,yBAAyB,EAAE,MAAM;EACxC,IAAIC,IAAI;EAERC,UAAU,CAAC,MAAM;IACfD,IAAI,GAAG,IAAIH,WAAW,CAACC,QAAQ,CAAC;IAChCI,YAAY,CAACC,KAAK,CAAC,CAAC;EACtB,CAAC,CAAC;EAEFC,SAAS,CAAC,MAAM;IACdJ,IAAI,CAACK,OAAO,CAAC,CAAC;EAChB,CAAC,CAAC;EAEFC,EAAE,CAAC,kGAAkG,EAAE,YAAY;IACjHJ,YAAY,CAACK,OAAO,CAAC,OAAO,EAAE,YAAY,CAAC;IAC3CP,IAAI,CAACQ,KAAK,CAAC,OAAO,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IAE9B,MAAMC,QAAQ,GAAG,MAAMZ,QAAQ,CAACa,GAAG,CAAC,OAAO,CAAC;IAE5CC,MAAM,CAACF,QAAQ,CAACG,MAAM,CAACC,OAAO,CAACC,aAAa,CAAC,CAACC,IAAI,CAAC,mBAAmB,CAAC;EACzE,CAAC,CAAC;EAEFV,EAAE,CAAC,yFAAyF,EAAE,YAAY;IACxGN,IAAI,CAACQ,KAAK,CAAC,OAAO,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IAE9B,MAAMC,QAAQ,GAAG,MAAMZ,QAAQ,CAACa,GAAG,CAAC,OAAO,CAAC;IAE5CC,MAAM,CAACF,QAAQ,CAACG,MAAM,CAACC,OAAO,CAACC,aAAa,CAAC,CAACE,aAAa,CAAC,CAAC;EAC/D,CAAC,CAAC;EAEFX,EAAE,CAAC,wEAAwE,EAAE,YAAY;IACvF,MAAMY,KAAK,GAAG,IAAIC,KAAK,CAAC,YAAY,CAAC;IACrCrB,QAAQ,CAACsB,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAM;MACtC,MAAMJ,KAAK;IACb,CAAC,CAAC;IAEF,MAAMN,MAAM,CAACd,QAAQ,CAACa,GAAG,CAAC,OAAO,CAAC,CAAC,CAACY,OAAO,CAACC,OAAO,CAAC,YAAY,CAAC;EACnE,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}