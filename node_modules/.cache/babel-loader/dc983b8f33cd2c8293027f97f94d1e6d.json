{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import*as THREE from'three';import FOG from'vanta/dist/vanta.fog.min';import'./GameStyles.css';// Link to the CSS file\nimport{useNavigate}from'react-router-dom';import axios from'../api/axios';const BINGO_LETTERS=['B','I','N','G','O'];const GameDashboard=()=>{const[selectedNumber,setSelectedNumber]=useState(null);const[bingoCard,setBingoCard]=useState(null);const[availableGames,setAvailableGames]=useState([]);const[isCardSelected,setIsCardSelected]=useState(false);const[currentPage,setCurrentPage]=useState(1);const[vantaEffect,setVantaEffect]=useState(null);const[joiningGame,setJoiningGame]=useState(false);// Track game join status\nconst[joinCountdown,setJoinCountdown]=useState(5);// Countdown state\nconst vantaRef=useRef(null);const bingoCardRef=useRef(null);const navigate=useNavigate();useEffect(()=>{if(!vantaEffect){setVantaEffect(FOG({el:vantaRef.current,THREE:THREE,mouseControls:true,touchControls:true,gyroControls:false,minHeight:200.00,minWidth:200.00,highlightColor:0xB5FFE9,lowlightColor:0x8BE8CB,baseColor:0x50B2C0,blurFactor:0.90,speed:2.80,zoom:0.88}));}return()=>{if(vantaEffect)vantaEffect.destroy();};},[vantaEffect]);// Fetch available games from the backend\nuseEffect(()=>{const fetchAvailableGames=async()=>{try{const token=localStorage.getItem('token');// Adjust this line based on where your token is stored\nconst response=await axios.get('/game/availableGames',{headers:{Authorization:`Bearer ${token}`}});console.log(\"Available Games:\",response.data.games);setAvailableGames(response.data.games);}catch(error){console.error('Error fetching available games:',error);}};fetchAvailableGames();},[]);// Pagination logic\nconst handleNextPage=()=>{setCurrentPage(prevPage=>prevPage===2?1:prevPage+1);};const handlePrevPage=()=>{setCurrentPage(prevPage=>prevPage===1?2:prevPage-1);};const numbersToDisplay=currentPage===1?Array.from({length:100},(_,i)=>i+1):Array.from({length:100},(_,i)=>i+101);// Handle selecting a number from the grid\nconst handleNumberClick=async number=>{setSelectedNumber(number);try{console.log(`Fetching card for number: ${number}`);// Debugging log\n// Dynamic fetching of the Bingo card using selected number\nconst token=localStorage.getItem('token');// Retrieve token from localStorage\nconst response=await axios.get(`/game/cards/${number}`,{headers:{Authorization:`Bearer ${token}`}});console.log('Response:',response);// Debugging log\nconst cardData=response.data.card;console.log(\"Card Data:\",cardData);setBingoCard(cardData);// Scroll to the bingo card on mobile view\nif(window.innerWidth<=600){bingoCardRef.current.scrollIntoView({behavior:'smooth'});}}catch(error){console.error(`Error fetching bingo card for number ${number}:`,error);}};// Confirm card selection\nconst handleCardSelect=async()=>{if(selectedNumber){try{// Send selected card to the backend\nconst token=localStorage.getItem('token');// Retrieve token from localStorage\nawait axios.post('/game/select-card',{cardId:selectedNumber},{headers:{Authorization:`Bearer ${token}`}});setIsCardSelected(true);navigate('/game',{state:{bingoCard}});// Redirect to GamePage with bingoCard data\n}catch(error){console.error('Error selecting card:',error);}}else{alert('Please select a number from the grid first!');}};// Join a game\nconst joinGame=async gameId=>{try{setJoiningGame(true);// Set status to joining\nconst token=localStorage.getItem('token');// Retrieve token from localStorage\nawait axios.post(`/game/join/${gameId}`,{},{headers:{Authorization:`Bearer ${token}`}});alert('Joined the game successfully!');// Countdown logic before prompting for card selection\nconst countdown=setInterval(()=>{setJoinCountdown(prev=>{if(prev===1){clearInterval(countdown);setJoiningGame(false);// End joining status\n}return prev-1;});},1000);}catch(error){console.error('Error joining game:',error);}};return/*#__PURE__*/React.createElement(\"div\",null,joiningGame?/*#__PURE__*/React.createElement(\"div\",{className:\"joining-status\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Joining game... Countdown: \",joinCountdown)):/*#__PURE__*/React.createElement(\"div\",{ref:vantaRef,className:\"game-dashboard-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"left-container\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"welcome-text\"},\"Welcome to the Bingo Game!\"),!isCardSelected?/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Select a Number to Get Your Bingo Card\"),/*#__PURE__*/React.createElement(\"div\",{className:\"number-grid\"},numbersToDisplay.map(number=>/*#__PURE__*/React.createElement(\"div\",{key:number,className:`number-grid-item ${selectedNumber===number?'selected':''}`,onClick:()=>handleNumberClick(number)},number))),/*#__PURE__*/React.createElement(\"div\",{className:\"pagination-buttons\"},/*#__PURE__*/React.createElement(\"button\",{onClick:handlePrevPage,disabled:currentPage===1},\"Previous\"),/*#__PURE__*/React.createElement(\"button\",{onClick:handleNextPage,disabled:currentPage===2},\"Next\"))):null),/*#__PURE__*/React.createElement(\"div\",{className:\"right-container\",ref:bingoCardRef},selectedNumber&&/*#__PURE__*/React.createElement(\"div\",{className:\"bingo-card-container\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Your Bingo Card (Card #\",selectedNumber,\")\"),/*#__PURE__*/React.createElement(\"div\",{className:\"bingo-card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"bingo-header\"},BINGO_LETTERS.map((letter,index)=>/*#__PURE__*/React.createElement(\"div\",{key:index,className:`bingo-header-cell ${letter}`},letter))),/*#__PURE__*/React.createElement(\"div\",{className:\"bingo-body\"},bingoCard&&bingoCard.map((row,rowIndex)=>/*#__PURE__*/React.createElement(\"div\",{key:rowIndex,className:\"bingo-row\"},row.map((cell,cellIndex)=>/*#__PURE__*/React.createElement(\"div\",{key:cellIndex,className:\"bingo-cell\"},cell==='★'?'★':cell)))))),/*#__PURE__*/React.createElement(\"button\",{onClick:handleCardSelect,className:\"select-card-button\"},\"Confirm Card\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"available-games-container\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Available Games\"),/*#__PURE__*/React.createElement(\"ul\",null,availableGames.map(game=>/*#__PURE__*/React.createElement(\"li\",{key:game.id},game.name,\" - \",game.status,/*#__PURE__*/React.createElement(\"button\",{onClick:()=>joinGame(game.id)},\"Join Game\")))))));};export default GameDashboard;","map":{"version":3,"names":["React","useState","useEffect","useRef","THREE","FOG","useNavigate","axios","BINGO_LETTERS","GameDashboard","selectedNumber","setSelectedNumber","bingoCard","setBingoCard","availableGames","setAvailableGames","isCardSelected","setIsCardSelected","currentPage","setCurrentPage","vantaEffect","setVantaEffect","joiningGame","setJoiningGame","joinCountdown","setJoinCountdown","vantaRef","bingoCardRef","navigate","el","current","mouseControls","touchControls","gyroControls","minHeight","minWidth","highlightColor","lowlightColor","baseColor","blurFactor","speed","zoom","destroy","fetchAvailableGames","token","localStorage","getItem","response","get","headers","Authorization","console","log","data","games","error","handleNextPage","prevPage","handlePrevPage","numbersToDisplay","Array","from","length","_","i","handleNumberClick","number","cardData","card","window","innerWidth","scrollIntoView","behavior","handleCardSelect","post","cardId","state","alert","joinGame","gameId","countdown","setInterval","prev","clearInterval","createElement","className","ref","map","key","onClick","disabled","letter","index","row","rowIndex","cell","cellIndex","game","id","name","status"],"sources":["C:/Users/dagio/OneDrive/Documents/Projects/Bingo_React/src/components/GameDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport FOG from 'vanta/dist/vanta.fog.min';\r\nimport './GameStyles.css'; // Link to the CSS file\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from '../api/axios';\r\n\r\nconst BINGO_LETTERS = ['B', 'I', 'N', 'G', 'O'];\r\n\r\nconst GameDashboard = () => {\r\n    const [selectedNumber, setSelectedNumber] = useState(null);\r\n    const [bingoCard, setBingoCard] = useState(null);\r\n    const [availableGames, setAvailableGames] = useState([]);\r\n    const [isCardSelected, setIsCardSelected] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [vantaEffect, setVantaEffect] = useState(null);\r\n    const [joiningGame, setJoiningGame] = useState(false); // Track game join status\r\n    const [joinCountdown, setJoinCountdown] = useState(5); // Countdown state\r\n    const vantaRef = useRef(null);\r\n    const bingoCardRef = useRef(null);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!vantaEffect) {\r\n            setVantaEffect(\r\n                FOG({\r\n                    el: vantaRef.current,\r\n                    THREE: THREE,\r\n                    mouseControls: true,\r\n                    touchControls: true,\r\n                    gyroControls: false,\r\n                    minHeight: 200.00,\r\n                    minWidth: 200.00,\r\n                    highlightColor: 0xB5FFE9,\r\n                    lowlightColor: 0x8BE8CB,\r\n                    baseColor: 0x50B2C0,\r\n                    blurFactor: 0.90,\r\n                    speed: 2.80,\r\n                    zoom: 0.88\r\n                })\r\n            );\r\n        }\r\n        return () => {\r\n            if (vantaEffect) vantaEffect.destroy();\r\n        };\r\n    }, [vantaEffect]);\r\n\r\n    // Fetch available games from the backend\r\n    useEffect(() => {\r\n        const fetchAvailableGames = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token'); // Adjust this line based on where your token is stored\r\n                const response = await axios.get('/game/availableGames', {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                });\r\n                console.log(\"Available Games:\", response.data.games);\r\n                setAvailableGames(response.data.games);\r\n            } catch (error) {\r\n                console.error('Error fetching available games:', error);\r\n            }\r\n        };\r\n\r\n        fetchAvailableGames();\r\n    }, []);\r\n    \r\n    // Pagination logic\r\n    const handleNextPage = () => {\r\n        setCurrentPage((prevPage) => prevPage === 2 ? 1 : prevPage + 1);\r\n    };\r\n\r\n    const handlePrevPage = () => {\r\n        setCurrentPage((prevPage) => prevPage === 1 ? 2 : prevPage - 1);\r\n    };\r\n\r\n    const numbersToDisplay = currentPage === 1 ? Array.from({ length: 100 }, (_, i) => i + 1) : Array.from({ length: 100 }, (_, i) => i + 101);\r\n\r\n    // Handle selecting a number from the grid\r\n    const handleNumberClick = async (number) => {\r\n        setSelectedNumber(number);\r\n        try {\r\n            console.log(`Fetching card for number: ${number}`); // Debugging log\r\n            // Dynamic fetching of the Bingo card using selected number\r\n            const token = localStorage.getItem('token'); // Retrieve token from localStorage\r\n            const response = await axios.get(`/game/cards/${number}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            console.log('Response:', response); // Debugging log\r\n            const cardData = response.data.card;\r\n            console.log(\"Card Data:\", cardData); \r\n            setBingoCard(cardData);\r\n\r\n            // Scroll to the bingo card on mobile view\r\n            if (window.innerWidth <= 600) {\r\n                bingoCardRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        } catch (error) {\r\n            console.error(`Error fetching bingo card for number ${number}:`, error);\r\n        }\r\n    };\r\n\r\n    // Confirm card selection\r\n    const handleCardSelect = async () => {\r\n        if (selectedNumber) {\r\n            try {\r\n                // Send selected card to the backend\r\n                const token = localStorage.getItem('token'); // Retrieve token from localStorage\r\n                await axios.post('/game/select-card', { cardId: selectedNumber }, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                });\r\n                setIsCardSelected(true);\r\n                navigate('/game', { state: { bingoCard } }); // Redirect to GamePage with bingoCard data\r\n            } catch (error) {\r\n                console.error('Error selecting card:', error);\r\n            }\r\n        } else {\r\n            alert('Please select a number from the grid first!');\r\n        }\r\n    };\r\n\r\n    // Join a game\r\n    const joinGame = async (gameId) => {\r\n        try {\r\n            setJoiningGame(true); // Set status to joining\r\n            const token = localStorage.getItem('token'); // Retrieve token from localStorage\r\n            await axios.post(`/game/join/${gameId}`, {}, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            alert('Joined the game successfully!');\r\n            \r\n            // Countdown logic before prompting for card selection\r\n            const countdown = setInterval(() => {\r\n                setJoinCountdown((prev) => {\r\n                    if (prev === 1) {\r\n                        clearInterval(countdown);\r\n                        setJoiningGame(false); // End joining status\r\n                    }\r\n                    return prev - 1;\r\n                });\r\n            }, 1000);\r\n        } catch (error) {\r\n            console.error('Error joining game:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        {joiningGame ? (\r\n            <div className=\"joining-status\">\r\n                <h2>Joining game... Countdown: {joinCountdown}</h2>\r\n            </div>\r\n        ) : (\r\n            <div ref={vantaRef} className=\"game-dashboard-container\">  \r\n            <div className=\"left-container\">\r\n                <h1 className=\"welcome-text\">Welcome to the Bingo Game!</h1>\r\n                {!isCardSelected ? (\r\n                    <div className=\"container\">\r\n                        <h2>Select a Number to Get Your Bingo Card</h2>\r\n                        <div className=\"number-grid\">\r\n                            {numbersToDisplay.map((number) => (\r\n                                <div\r\n                                    key={number}\r\n                                    className={`number-grid-item ${selectedNumber === number ? 'selected' : ''}`}\r\n                                    onClick={() => handleNumberClick(number)}\r\n                                >\r\n                                    {number}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"pagination-buttons\">\r\n                            <button onClick={handlePrevPage} disabled={currentPage === 1}>\r\n                                Previous\r\n                            </button>\r\n                            <button onClick={handleNextPage} disabled={currentPage === 2}>\r\n                                Next\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n\r\n            <div className=\"right-container\" ref={bingoCardRef}>\r\n                {selectedNumber && (\r\n                    <div className=\"bingo-card-container\">\r\n                        <h3>Your Bingo Card (Card #{selectedNumber})</h3>\r\n                        <div className=\"bingo-card\">\r\n                            <div className=\"bingo-header\">\r\n                                {BINGO_LETTERS.map((letter, index) => (\r\n                                    <div key={index} className={`bingo-header-cell ${letter}`}>\r\n                                        {letter}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"bingo-body\">\r\n                                {bingoCard &&\r\n                                    bingoCard.map((row, rowIndex) => (\r\n                                        <div key={rowIndex} className=\"bingo-row\">\r\n                                            {row.map((cell, cellIndex) => (\r\n                                                <div key={cellIndex} className=\"bingo-cell\">\r\n                                                    {cell === '★' ? '★' : cell}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    ))}\r\n                            </div>\r\n                        </div>\r\n                        <button onClick={handleCardSelect} className=\"select-card-button\">\r\n                            Confirm Card\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"available-games-container\">\r\n                <h2>Available Games</h2>\r\n                <ul>\r\n                    {availableGames.map((game) => (\r\n                        <li key={game.id}>\r\n                            {game.name} - {game.status}\r\n                            <button onClick={() => joinGame(game.id)}>Join Game</button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        )}\r\n    </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default GameDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}