{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dagio\\\\OneDrive\\\\Documents\\\\Projects\\\\Bingo_React\\\\src\\\\components\\\\GameDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport FOG from 'vanta/dist/vanta.fog.min';\nimport './GameStyles.css';\nimport GamePage from './GamePage';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BINGO_LETTERS = ['B', 'I', 'N', 'G', 'O'];\nconst GameDashboard = () => {\n  _s();\n  const [selectedNumber, setSelectedNumber] = useState(null);\n  const [bingoCard, setBingoCard] = useState(null);\n  const [availableGames, setAvailableGames] = useState([]);\n  const [isCardSelected, setIsCardSelected] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [vantaEffect, setVantaEffect] = useState(null);\n  const [joiningGame, setJoiningGame] = useState(false);\n  const [joinCountdown, setJoinCountdown] = useState(5);\n  const vantaRef = useRef(null);\n  const bingoCardRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(FOG({\n        el: vantaRef.current,\n        THREE: THREE,\n        mouseControls: true,\n        touchControls: true,\n        gyroControls: false,\n        minHeight: 200.00,\n        minWidth: 200.00,\n        highlightColor: 0xB5FFE9,\n        lowlightColor: 0x8BE8CB,\n        baseColor: 0x50B2C0,\n        blurFactor: 0.90,\n        speed: 2.80,\n        zoom: 0.88\n      }));\n    }\n    return () => {\n      if (vantaEffect) vantaEffect.destroy();\n    };\n  }, [vantaEffect]);\n\n  // Fetch available games from the backend\n  useEffect(() => {\n    const fetchAvailableGames = async () => {\n      try {\n        const response = await axios.get('/game/available-games');\n        setAvailableGames(response.data.games);\n      } catch (error) {\n        console.error('Error fetching available games:', error);\n      }\n    };\n    fetchAvailableGames();\n  }, []);\n  const handleNumberClick = async number => {\n    setSelectedNumber(number);\n    try {\n      const response = await axios.get(`/game/cards/${number}`);\n      const cardData = response.data.card;\n      const generatedCard = [[cardData.B1, cardData.B2, cardData.B3, cardData.B4, cardData.B5], [cardData.I1, cardData.I2, cardData.I3, cardData.I4, cardData.I5], [cardData.N1, cardData.N2, '★', cardData.N4, cardData.N5], [cardData.G1, cardData.G2, cardData.G3, cardData.G4, cardData.G5], [cardData.O1, cardData.O2, cardData.O3, cardData.O4, cardData.O5]];\n      setBingoCard(generatedCard);\n      if (window.innerWidth <= 600) {\n        bingoCardRef.current.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    } catch (error) {\n      console.error(`Error fetching bingo card for number ${number}:`, error);\n    }\n  };\n  const handleCardSelect = async () => {\n    if (selectedNumber) {\n      try {\n        await axios.post('/game/select-card', {\n          cardId: selectedNumber\n        });\n        setIsCardSelected(true);\n      } catch (error) {\n        console.error('Error selecting card:', error);\n      }\n    } else {\n      alert('Please select a number from the grid first!');\n    }\n  };\n  const startGame = async () => {\n    if (isCardSelected) {\n      try {\n        await axios.post('/game/start');\n        setGameStarted(true);\n      } catch (error) {\n        console.error('Error starting game:', error);\n      }\n    } else {\n      alert('Please select a card first!');\n    }\n  };\n  const joinGame = async gameId => {\n    try {\n      setJoiningGame(true);\n      await axios.post(`/game/join/${gameId}`);\n      alert('Joined the game successfully!');\n      const countdown = setInterval(() => {\n        setJoinCountdown(prev => {\n          if (prev === 1) {\n            clearInterval(countdown);\n            setJoiningGame(false);\n            setIsCardSelected(false); // Reset card selection for the new game\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } catch (error) {\n      console.error('Error joining game:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: joiningGame ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joining-status\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Joining game... Countdown: \", joinCountdown]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: vantaRef,\n      className: \"game-dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"welcome-text\",\n          children: \"Welcome to the Bingo Game!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this), !isCardSelected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Select a Number to Get Your Bingo Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"number-grid\",\n            children: Array.from({\n              length: 200\n            }, (_, i) => i + 1).map(number => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `number-grid-item ${selectedNumber === number ? 'selected' : ''}`,\n              onClick: () => handleNumberClick(number),\n              children: number\n            }, number, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-container\",\n        ref: bingoCardRef,\n        children: bingoCard && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bingo-card-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Your Bingo Card (Card #\", selectedNumber, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bingo-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bingo-header\",\n              children: BINGO_LETTERS.map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `bingo-header-cell ${letter}`,\n                children: letter\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bingo-body\",\n              children: bingoCard.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bingo-row\",\n                children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bingo-cell\",\n                  children: cell === '★' ? '★' : cell\n                }, cellIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 53\n                }, this))\n              }, rowIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCardSelect,\n            className: \"select-card-button\",\n            children: \"Confirm Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 33\n          }, this), isCardSelected && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startGame,\n            className: \"start-game-button\",\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"available-games-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Available Games\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: availableGames.map(game => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [game.name, \" - \", game.status, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => joinGame(game.id),\n              children: \"Join Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 37\n            }, this)]\n          }, game.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n_s(GameDashboard, \"tHnST5zafPBxygi4KdL/21nRDQ0=\");\n_c = GameDashboard;\nexport default GameDashboard;\nvar _c;\n$RefreshReg$(_c, \"GameDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","THREE","FOG","GamePage","axios","jsxDEV","_jsxDEV","BINGO_LETTERS","GameDashboard","_s","selectedNumber","setSelectedNumber","bingoCard","setBingoCard","availableGames","setAvailableGames","isCardSelected","setIsCardSelected","gameStarted","setGameStarted","vantaEffect","setVantaEffect","joiningGame","setJoiningGame","joinCountdown","setJoinCountdown","vantaRef","bingoCardRef","el","current","mouseControls","touchControls","gyroControls","minHeight","minWidth","highlightColor","lowlightColor","baseColor","blurFactor","speed","zoom","destroy","fetchAvailableGames","response","get","data","games","error","console","handleNumberClick","number","cardData","card","generatedCard","B1","B2","B3","B4","B5","I1","I2","I3","I4","I5","N1","N2","N4","N5","G1","G2","G3","G4","G5","O1","O2","O3","O4","O5","window","innerWidth","scrollIntoView","behavior","handleCardSelect","post","cardId","alert","startGame","joinGame","gameId","countdown","setInterval","prev","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","Array","from","length","_","i","map","onClick","letter","index","row","rowIndex","cell","cellIndex","game","name","status","id","_c","$RefreshReg$"],"sources":["C:/Users/dagio/OneDrive/Documents/Projects/Bingo_React/src/components/GameDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport FOG from 'vanta/dist/vanta.fog.min';\r\nimport './GameStyles.css';\r\nimport GamePage from './GamePage'; \r\nimport axios from 'axios';\r\n\r\nconst BINGO_LETTERS = ['B', 'I', 'N', 'G', 'O'];\r\n\r\nconst GameDashboard = () => {\r\n    const [selectedNumber, setSelectedNumber] = useState(null);\r\n    const [bingoCard, setBingoCard] = useState(null);\r\n    const [availableGames, setAvailableGames] = useState([]);\r\n    const [isCardSelected, setIsCardSelected] = useState(false);\r\n    const [gameStarted, setGameStarted] = useState(false);\r\n    const [vantaEffect, setVantaEffect] = useState(null);\r\n    const [joiningGame, setJoiningGame] = useState(false);\r\n    const [joinCountdown, setJoinCountdown] = useState(5);\r\n    const vantaRef = useRef(null);\r\n    const bingoCardRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!vantaEffect) {\r\n            setVantaEffect(\r\n                FOG({\r\n                    el: vantaRef.current,\r\n                    THREE: THREE,\r\n                    mouseControls: true,\r\n                    touchControls: true,\r\n                    gyroControls: false,\r\n                    minHeight: 200.00,\r\n                    minWidth: 200.00,\r\n                    highlightColor: 0xB5FFE9,\r\n                    lowlightColor: 0x8BE8CB,\r\n                    baseColor: 0x50B2C0,\r\n                    blurFactor: 0.90,\r\n                    speed: 2.80,\r\n                    zoom: 0.88\r\n                })\r\n            );\r\n        }\r\n        return () => {\r\n            if (vantaEffect) vantaEffect.destroy();\r\n        };\r\n    }, [vantaEffect]);\r\n\r\n    // Fetch available games from the backend\r\n    useEffect(() => {\r\n        const fetchAvailableGames = async () => {\r\n            try {\r\n                const response = await axios.get('/game/available-games');\r\n                setAvailableGames(response.data.games);\r\n            } catch (error) {\r\n                console.error('Error fetching available games:', error);\r\n            }\r\n        };\r\n\r\n        fetchAvailableGames();\r\n    }, []);\r\n\r\n    const handleNumberClick = async (number) => {\r\n        setSelectedNumber(number);\r\n        try {\r\n            const response = await axios.get(`/game/cards/${number}`);\r\n            const cardData = response.data.card;\r\n\r\n            const generatedCard = [\r\n                [cardData.B1, cardData.B2, cardData.B3, cardData.B4, cardData.B5],\r\n                [cardData.I1, cardData.I2, cardData.I3, cardData.I4, cardData.I5],\r\n                [cardData.N1, cardData.N2, '★', cardData.N4, cardData.N5],\r\n                [cardData.G1, cardData.G2, cardData.G3, cardData.G4, cardData.G5],\r\n                [cardData.O1, cardData.O2, cardData.O3, cardData.O4, cardData.O5],\r\n            ];\r\n\r\n            setBingoCard(generatedCard);\r\n\r\n            if (window.innerWidth <= 600) {\r\n                bingoCardRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        } catch (error) {\r\n            console.error(`Error fetching bingo card for number ${number}:`, error);\r\n        }\r\n    };\r\n\r\n    const handleCardSelect = async () => {\r\n        if (selectedNumber) {\r\n            try {\r\n                await axios.post('/game/select-card', { cardId: selectedNumber });\r\n                setIsCardSelected(true);\r\n            } catch (error) {\r\n                console.error('Error selecting card:', error);\r\n            }\r\n        } else {\r\n            alert('Please select a number from the grid first!');\r\n        }\r\n    };\r\n\r\n    const startGame = async () => {\r\n        if (isCardSelected) {\r\n            try {\r\n                await axios.post('/game/start');\r\n                setGameStarted(true);\r\n            } catch (error) {\r\n                console.error('Error starting game:', error);\r\n            }\r\n        } else {\r\n            alert('Please select a card first!');\r\n        }\r\n    };\r\n\r\n    const joinGame = async (gameId) => {\r\n        try {\r\n            setJoiningGame(true);\r\n            await axios.post(`/game/join/${gameId}`);\r\n            alert('Joined the game successfully!');\r\n            \r\n            const countdown = setInterval(() => {\r\n                setJoinCountdown((prev) => {\r\n                    if (prev === 1) {\r\n                        clearInterval(countdown);\r\n                        setJoiningGame(false);\r\n                        setIsCardSelected(false); // Reset card selection for the new game\r\n                    }\r\n                    return prev - 1;\r\n                });\r\n            }, 1000);\r\n        } catch (error) {\r\n            console.error('Error joining game:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {joiningGame ? (\r\n                <div className=\"joining-status\">\r\n                    <h2>Joining game... Countdown: {joinCountdown}</h2>\r\n                </div>\r\n            ) : (\r\n                <div ref={vantaRef} className=\"game-dashboard-container\">  \r\n                    <div className=\"left-container\">\r\n                        <h1 className=\"welcome-text\">Welcome to the Bingo Game!</h1>\r\n                        {!isCardSelected ? (\r\n                            <div className=\"container\">\r\n                                <h2>Select a Number to Get Your Bingo Card</h2>\r\n                                <div className=\"number-grid\">\r\n                                    {Array.from({ length: 200 }, (_, i) => i + 1).map((number) => (\r\n                                        <div\r\n                                            key={number}\r\n                                            className={`number-grid-item ${selectedNumber === number ? 'selected' : ''}`}\r\n                                            onClick={() => handleNumberClick(number)}\r\n                                        >\r\n                                            {number}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n\r\n                    <div className=\"right-container\" ref={bingoCardRef}>\r\n                        {bingoCard && (\r\n                            <div className=\"bingo-card-container\">\r\n                                <h3>Your Bingo Card (Card #{selectedNumber})</h3>\r\n                                <div className=\"bingo-card\">\r\n                                    <div className=\"bingo-header\">\r\n                                        {BINGO_LETTERS.map((letter, index) => (\r\n                                            <div key={index} className={`bingo-header-cell ${letter}`}>\r\n                                                {letter}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <div className=\"bingo-body\">\r\n                                        {bingoCard.map((row, rowIndex) => (\r\n                                            <div key={rowIndex} className=\"bingo-row\">\r\n                                                {row.map((cell, cellIndex) => (\r\n                                                    <div key={cellIndex} className=\"bingo-cell\">\r\n                                                        {cell === '★' ? '★' : cell}\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                                <button onClick={handleCardSelect} className=\"select-card-button\">\r\n                                    Confirm Card\r\n                                </button>\r\n                                {isCardSelected && (\r\n                                    <button onClick={startGame} className=\"start-game-button\">\r\n                                        Start Game\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"available-games-container\">\r\n                        <h2>Available Games</h2>\r\n                        <ul>\r\n                            {availableGames.map((game) => (\r\n                                <li key={game.id}>\r\n                                    {game.name} - {game.status}\r\n                                    <button onClick={() => joinGame(game.id)}>Join Game</button>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}