{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dagio\\\\OneDrive\\\\Documents\\\\Projects\\\\Bingo_React\\\\src\\\\components\\\\GameDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport FOG from 'vanta/dist/vanta.fog.min';\nimport './GameStyles.css'; // Link to the CSS file\nimport GamePage from './GamePage'; // Assuming GamePage is in the same directory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BINGO_LETTERS = ['B', 'I', 'N', 'G', 'O'];\nconst GameDashboard = () => {\n  _s();\n  const [selectedNumber, setSelectedNumber] = useState(null);\n  const [bingoCard, setBingoCard] = useState(null);\n  const [isCardSelected, setIsCardSelected] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [vantaEffect, setVantaEffect] = useState(null);\n  const vantaRef = useRef(null);\n  const bingoCardRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(FOG({\n        el: vantaRef.current,\n        THREE: THREE,\n        mouseControls: true,\n        touchControls: true,\n        gyroControls: false,\n        minHeight: 200.00,\n        minWidth: 200.00,\n        highlightColor: 0xB5FFE9,\n        lowlightColor: 0x8BE8CB,\n        baseColor: 0x50B2C0,\n        blurFactor: .90,\n        speed: 2.80,\n        zoom: .88\n      }));\n    }\n    return () => {\n      if (vantaEffect) vantaEffect.destroy();\n    };\n  }, [vantaEffect]);\n  useEffect(() => {\n    // Fetch available games from the backend\n    const fetchAvailableGames = async () => {\n      try {\n        const response = await axios.get('/games/available');\n        setAvailableGames(response.data.games);\n      } catch (error) {\n        console.error('Error fetching available games:', error);\n      }\n    };\n    fetchAvailableGames();\n  }, []);\n  // Pagination logic\n  const handleNextPage = () => {\n    setCurrentPage(prevPage => prevPage === 2 ? 1 : prevPage + 1);\n  };\n  const handlePrevPage = () => {\n    setCurrentPage(prevPage => prevPage === 1 ? 2 : prevPage - 1);\n  };\n  const numbersToDisplay = currentPage === 1 ? Array.from({\n    length: 100\n  }, (_, i) => i + 1) : Array.from({\n    length: 100\n  }, (_, i) => i + 101);\n\n  // Handle selecting a number from the grid\n  const handleNumberClick = number => {\n    setSelectedNumber(number);\n    const generatedCard = generateBingoCard(number);\n    setBingoCard(generatedCard);\n\n    // Scroll to the bingo card on mobile view\n    if (window.innerWidth <= 600) {\n      bingoCardRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  // Confirm card selection\n  const handleCardSelect = async () => {\n    if (selectedNumber) {\n      try {\n        // Send selected card to the backend\n        await axios.post('/games/select-card', {\n          cardId: selectedNumber\n        });\n        setIsCardSelected(true);\n      } catch (error) {\n        console.error('Error selecting card:', error);\n      }\n    } else {\n      alert('Please select a number from the grid first!');\n    }\n  };\n  // Start the game\n  // Start the game\n  const startGame = async () => {\n    if (isCardSelected) {\n      try {\n        // Start the game by calling the backend\n        await axios.post('/games/start');\n        setGameStarted(true);\n      } catch (error) {\n        console.error('Error starting game:', error);\n      }\n    } else {\n      alert('Please select a card first!');\n    }\n  };\n\n  // Bingo card generation logic\n  const generateBingoCard = seed => {\n    const card = [];\n    for (let i = 0; i < 5; i++) {\n      const column = [];\n      let min, max;\n      switch (i) {\n        case 0:\n          min = 1;\n          max = 15;\n          break;\n        // B\n        case 1:\n          min = 16;\n          max = 30;\n          break;\n        // I\n        case 2:\n          min = 31;\n          max = 45;\n          break;\n        // N\n        case 3:\n          min = 46;\n          max = 60;\n          break;\n        // G\n        case 4:\n          min = 61;\n          max = 75;\n          break;\n        // O\n        default:\n          min = 1;\n          max = 75;\n      }\n      for (let j = 0; j < 5; j++) {\n        if (i === 2 && j === 2) {\n          column.push('★'); // Free space\n        } else {\n          let num;\n          do {\n            seed++;\n            num = Math.floor(seededRandom(seed) * (max - min + 1)) + min;\n          } while (column.includes(num));\n          column.push(num);\n        }\n      }\n      card.push(column);\n    }\n\n    // Transpose to get correct layout\n    return card[0].map((_, i) => card.map(row => row[i]));\n  };\n\n  // Seeded random number generator\n  const seededRandom = seed => {\n    const x = Math.sin(seed) * 10000;\n    return x - Math.floor(x);\n  };\n  if (gameStarted) {\n    return /*#__PURE__*/_jsxDEV(GamePage, {\n      bingoCard: bingoCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: vantaRef,\n    className: \"game-dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"welcome-text\",\n        children: \"Welcome to the Bingo Game!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), !isCardSelected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select a Number to Get Your Bingo Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number-grid\",\n          children: numbersToDisplay.map(number => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `number-grid-item ${selectedNumber === number ? \"selected\" : \"\"}`,\n            onClick: () => handleNumberClick(number),\n            children: number\n          }, number, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrevPage,\n            disabled: currentPage === 1,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextPage,\n            disabled: currentPage === 2,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-container\",\n      ref: bingoCardRef,\n      children: selectedNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bingo-card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Your Bingo Card (Card #\", selectedNumber, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bingo-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bingo-header\",\n            children: BINGO_LETTERS.map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `bingo-header-cell ${letter}`,\n              children: letter\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bingo-body\",\n            children: bingoCard && bingoCard.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bingo-row\",\n              children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bingo-cell\",\n                children: cell === \"★\" ? \"★\" : cell\n              }, cellIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 49\n              }, this))\n            }, rowIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCardSelect,\n          className: \"select-card-button\",\n          children: \"Confirm Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this), isCardSelected && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startGame,\n          className: \"start-game-button\",\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n};\n_s(GameDashboard, \"1N85fnQhzoNqX9c4ZAYmRxThG1E=\");\n_c = GameDashboard;\nexport default GameDashboard;\nvar _c;\n$RefreshReg$(_c, \"GameDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","THREE","FOG","GamePage","jsxDEV","_jsxDEV","BINGO_LETTERS","GameDashboard","_s","selectedNumber","setSelectedNumber","bingoCard","setBingoCard","isCardSelected","setIsCardSelected","currentPage","setCurrentPage","gameStarted","setGameStarted","vantaEffect","setVantaEffect","vantaRef","bingoCardRef","el","current","mouseControls","touchControls","gyroControls","minHeight","minWidth","highlightColor","lowlightColor","baseColor","blurFactor","speed","zoom","destroy","fetchAvailableGames","response","axios","get","setAvailableGames","data","games","error","console","handleNextPage","prevPage","handlePrevPage","numbersToDisplay","Array","from","length","_","i","handleNumberClick","number","generatedCard","generateBingoCard","window","innerWidth","scrollIntoView","behavior","handleCardSelect","post","cardId","alert","startGame","seed","card","column","min","max","j","push","num","Math","floor","seededRandom","includes","map","row","x","sin","fileName","_jsxFileName","lineNumber","columnNumber","ref","className","children","onClick","disabled","letter","index","rowIndex","cell","cellIndex","_c","$RefreshReg$"],"sources":["C:/Users/dagio/OneDrive/Documents/Projects/Bingo_React/src/components/GameDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport FOG from 'vanta/dist/vanta.fog.min';\r\nimport './GameStyles.css'; // Link to the CSS file\r\nimport GamePage from './GamePage'; // Assuming GamePage is in the same directory\r\n\r\n\r\nconst BINGO_LETTERS = ['B', 'I', 'N', 'G', 'O'];\r\n\r\nconst GameDashboard = () => {\r\n    const [selectedNumber, setSelectedNumber] = useState(null);\r\n    const [bingoCard, setBingoCard] = useState(null);\r\n    const [isCardSelected, setIsCardSelected] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [gameStarted, setGameStarted] = useState(false);\r\n    const [vantaEffect, setVantaEffect] = useState(null);\r\n    const vantaRef = useRef(null);\r\n    const bingoCardRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!vantaEffect) {\r\n            setVantaEffect(\r\n                FOG({\r\n                    el: vantaRef.current,\r\n                    THREE: THREE,\r\n                    mouseControls: true,\r\n                    touchControls: true,\r\n                    gyroControls: false,\r\n                    minHeight: 200.00,\r\n                    minWidth: 200.00,\r\n                    highlightColor: 0xB5FFE9,\r\n                    lowlightColor: 0x8BE8CB,\r\n                    baseColor: 0x50B2C0,\r\n                    blurFactor: .90,\r\n                    speed: 2.80,\r\n                    zoom: .88\r\n                })\r\n            );\r\n        }\r\n        return () => {\r\n            if (vantaEffect) vantaEffect.destroy();\r\n        };\r\n    }, [vantaEffect]);\r\n    useEffect(() => {\r\n        // Fetch available games from the backend\r\n        const fetchAvailableGames = async () => {\r\n            try {\r\n                const response = await axios.get('/games/available');\r\n                setAvailableGames(response.data.games);\r\n            } catch (error) {\r\n                console.error('Error fetching available games:', error);\r\n            }\r\n        };\r\n\r\n        fetchAvailableGames();\r\n    }, []);\r\n    // Pagination logic\r\n    const handleNextPage = () => {\r\n        setCurrentPage((prevPage) => (prevPage === 2 ? 1 : prevPage + 1));\r\n    };\r\n\r\n    const handlePrevPage = () => {\r\n        setCurrentPage((prevPage) => (prevPage === 1 ? 2 : prevPage - 1));\r\n    };\r\n\r\n    const numbersToDisplay = currentPage === 1 ? Array.from({ length: 100 }, (_, i) => i + 1) : Array.from({ length: 100 }, (_, i) => i + 101);\r\n\r\n    // Handle selecting a number from the grid\r\n    const handleNumberClick = (number) => {\r\n        setSelectedNumber(number);\r\n        const generatedCard = generateBingoCard(number);\r\n        setBingoCard(generatedCard);\r\n\r\n        // Scroll to the bingo card on mobile view\r\n        if (window.innerWidth <= 600) {\r\n            bingoCardRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    };\r\n\r\n    // Confirm card selection\r\n    const handleCardSelect = async () => {\r\n        if (selectedNumber) {\r\n            try {\r\n                // Send selected card to the backend\r\n                await axios.post('/games/select-card', { cardId: selectedNumber });\r\n                setIsCardSelected(true);\r\n            } catch (error) {\r\n                console.error('Error selecting card:', error);\r\n            }\r\n        } else {\r\n            alert('Please select a number from the grid first!');\r\n        }\r\n    };\r\n    // Start the game\r\n    // Start the game\r\n    const startGame = async () => {\r\n        if (isCardSelected) {\r\n            try {\r\n                // Start the game by calling the backend\r\n                await axios.post('/games/start');\r\n                setGameStarted(true);\r\n            } catch (error) {\r\n                console.error('Error starting game:', error);\r\n            }\r\n        } else {\r\n            alert('Please select a card first!');\r\n        }\r\n    };\r\n\r\n    // Bingo card generation logic\r\n    const generateBingoCard = (seed) => {\r\n        const card = [];\r\n        for (let i = 0; i < 5; i++) {\r\n            const column = [];\r\n            let min, max;\r\n\r\n            switch (i) {\r\n                case 0: min = 1; max = 15; break;   // B\r\n                case 1: min = 16; max = 30; break;  // I\r\n                case 2: min = 31; max = 45; break;  // N\r\n                case 3: min = 46; max = 60; break;  // G\r\n                case 4: min = 61; max = 75; break;  // O\r\n                default: min = 1; max = 75;\r\n            }\r\n\r\n            for (let j = 0; j < 5; j++) {\r\n                if (i === 2 && j === 2) {\r\n                    column.push('★'); // Free space\r\n                } else {\r\n                    let num;\r\n                    do {\r\n                        seed++;\r\n                        num = Math.floor(seededRandom(seed) * (max - min + 1)) + min;\r\n                    } while (column.includes(num));\r\n                    column.push(num);\r\n                }\r\n            }\r\n            card.push(column);\r\n        }\r\n\r\n        // Transpose to get correct layout\r\n        return card[0].map((_, i) => card.map(row => row[i]));\r\n    };\r\n\r\n    // Seeded random number generator\r\n    const seededRandom = (seed) => {\r\n        const x = Math.sin(seed) * 10000;\r\n        return x - Math.floor(x);\r\n    };\r\n\r\n    if (gameStarted) {\r\n        return <GamePage bingoCard={bingoCard} />;\r\n    }\r\n\r\n    return (\r\n        <div ref={vantaRef} className=\"game-dashboard-container\">\r\n            <div className=\"left-container\">\r\n                <h1 className=\"welcome-text\">Welcome to the Bingo Game!</h1>\r\n                {!isCardSelected ? (\r\n                    <div className=\"container\">\r\n                        <h2>Select a Number to Get Your Bingo Card</h2>\r\n                        <div className=\"number-grid\">\r\n                            {numbersToDisplay.map((number) => (\r\n                                <div\r\n                                    key={number}\r\n                                    className={`number-grid-item ${selectedNumber === number ? \"selected\" : \"\"}`}\r\n                                    onClick={() => handleNumberClick(number)}\r\n                                >\r\n                                    {number}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"pagination-buttons\">\r\n                            <button onClick={handlePrevPage} disabled={currentPage === 1}>\r\n                                Previous\r\n                            </button>\r\n                            <button onClick={handleNextPage} disabled={currentPage === 2}>\r\n                                Next\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n\r\n            <div className=\"right-container\" ref={bingoCardRef}>\r\n                {selectedNumber && (\r\n                    <div className=\"bingo-card-container\">\r\n                        <h3>Your Bingo Card (Card #{selectedNumber})</h3>\r\n                        <div className=\"bingo-card\">\r\n                            <div className=\"bingo-header\">\r\n                                {BINGO_LETTERS.map((letter, index) => (\r\n                                    <div key={index} className={`bingo-header-cell ${letter}`}>\r\n                                        {letter}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"bingo-body\">\r\n                                {bingoCard &&\r\n                                    bingoCard.map((row, rowIndex) => (\r\n                                        <div key={rowIndex} className=\"bingo-row\">\r\n                                            {row.map((cell, cellIndex) => (\r\n                                                <div key={cellIndex} className=\"bingo-cell\">\r\n                                                    {cell === \"★\" ? \"★\" : cell}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    ))}\r\n                            </div>\r\n                        </div>\r\n                        <button onClick={handleCardSelect} className=\"select-card-button\">\r\n                            Confirm Card\r\n                        </button>\r\n                        {isCardSelected && (\r\n                            <button onClick={startGame} className=\"start-game-button\">\r\n                                Start Game\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameDashboard;   "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}