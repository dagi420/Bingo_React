{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import styles from'./GamePage.module.css';const BINGO_LETTERS=['B','I','N','G','O'];const GamePage=_ref=>{let{bingoCard}=_ref;const[markedNumbers,setMarkedNumbers]=useState([bingoCard[2][2]]);// Automatically mark the center cell\nconst[calledNumbers,setCalledNumbers]=useState([]);const[currentCall,setCurrentCall]=useState('');const[countdown,setCountdown]=useState(5);// Countdown state\nconst timerRef=useRef(null);// Use useRef to store the interval ID\n// Toggle marking a number on the card\nconst toggleMarkNumber=(rowIndex,cellIndex)=>{const number=bingoCard[rowIndex][cellIndex];setMarkedNumbers(prev=>prev.includes(number)?prev.filter(n=>n!==number):[...prev,number]);};// Check if the player has won Bingo\nconst checkBingo=()=>{const isSubset=markedNumbers.every(number=>calledNumbers.includes(number));if(!isSubset){alert('Not Bingo yet! Keep going!');return;}const rows=bingoCard.some(row=>row.every(number=>markedNumbers.includes(number)));const cols=bingoCard[0].some((_,i)=>bingoCard.every(row=>markedNumbers.includes(row[i])));const diag1=bingoCard.every((row,i)=>markedNumbers.includes(row[i]));const diag2=bingoCard.every((row,i)=>markedNumbers.includes(row[4-i]));if(rows||cols||diag1||diag2){alert('Bingo! You win!');}else{alert('Not Bingo yet! Keep going!');}};// Update calledNumbers when currentCall changes\nuseEffect(()=>{if(currentCall){setCalledNumbers(prev=>[...prev,currentCall]);}},[currentCall]);// Countdown effect\nuseEffect(()=>{if(countdown>0){const countdownInterval=setInterval(()=>{setCountdown(prev=>prev-1);},1000);return()=>clearInterval(countdownInterval);}},[countdown]);// Cleanup timer on component unmount\nuseEffect(()=>{const startTimer=()=>{const calledNumbersSet=new Set(calledNumbers);const interval=setInterval(()=>{if(calledNumbersSet.size>=75){clearInterval(interval);return;}let call;let number;let letter;// Generate a unique call\ndo{letter=BINGO_LETTERS[Math.floor(Math.random()*BINGO_LETTERS.length)];switch(letter){case'B':number=Math.floor(Math.random()*15)+1;break;case'I':number=Math.floor(Math.random()*15)+16;break;case'N':number=Math.floor(Math.random()*15)+31;break;case'G':number=Math.floor(Math.random()*15)+46;break;case'O':number=Math.floor(Math.random()*15)+61;break;default:number=Math.floor(Math.random()*75)+1;}call=`${letter}${number}`;}while(calledNumbersSet.has(call));calledNumbersSet.add(call);setCurrentCall(call);setCountdown(5);// Reset countdown\n},5000);timerRef.current=interval;};startTimer();return()=>{clearInterval(timerRef.current);};},[calledNumbers]);const getColorClass=call=>{switch(call[0]){case'B':return styles.red;case'I':return styles.yellow;case'N':return styles.blue;case'G':return styles.orange;case'O':return styles.green;default:return'';}};return/*#__PURE__*/React.createElement(\"div\",{className:styles.container},/*#__PURE__*/React.createElement(\"div\",{className:styles.calledNumbersContainer},/*#__PURE__*/React.createElement(\"h3\",null,\"Called Numbers\"),/*#__PURE__*/React.createElement(\"div\",{className:styles.calledNumbers},calledNumbers.length>0?calledNumbers.slice(-5).map((call,index)=>/*#__PURE__*/React.createElement(\"div\",{key:index,className:`${styles.calledNumber} ${getColorClass(call)} ${styles.fadeIn}`},call)):/*#__PURE__*/React.createElement(\"div\",null,\"No numbers called yet\"))),/*#__PURE__*/React.createElement(\"div\",{className:styles.currentCall},/*#__PURE__*/React.createElement(\"h3\",null,\"Current Call\"),currentCall?/*#__PURE__*/React.createElement(\"div\",{className:`${styles.calledNumber} ${getColorClass(currentCall)} ${styles.fadeIn}`},currentCall):/*#__PURE__*/React.createElement(\"div\",null,\"No current call\"),/*#__PURE__*/React.createElement(\"div\",{className:styles.countdown},\"Next call in: \",countdown,\" seconds\")),/*#__PURE__*/React.createElement(\"h2\",null,\"Game Started\"),/*#__PURE__*/React.createElement(\"div\",{className:styles.bingoCard},/*#__PURE__*/React.createElement(\"div\",{className:styles.bingoHeader},BINGO_LETTERS.map((letter,index)=>/*#__PURE__*/React.createElement(\"div\",{key:index,className:`${styles.bingoHeaderCell} ${getColorClass(letter+'1')}`},letter))),/*#__PURE__*/React.createElement(\"div\",{className:styles.bingoBody},bingoCard.map((row,rowIndex)=>/*#__PURE__*/React.createElement(\"div\",{key:rowIndex,className:styles.bingoRow},row.map((cell,cellIndex)=>/*#__PURE__*/React.createElement(\"div\",{key:cellIndex,className:`${styles.bingoCell} ${markedNumbers.includes(cell)?styles.marked:''}`,onClick:()=>toggleMarkNumber(rowIndex,cellIndex)},cell)))))),/*#__PURE__*/React.createElement(\"button\",{onClick:checkBingo,className:styles.checkBingoButton},\"Check Bingo\"));};export default GamePage;","map":{"version":3,"names":["React","useState","useEffect","useRef","styles","BINGO_LETTERS","GamePage","_ref","bingoCard","markedNumbers","setMarkedNumbers","calledNumbers","setCalledNumbers","currentCall","setCurrentCall","countdown","setCountdown","timerRef","toggleMarkNumber","rowIndex","cellIndex","number","prev","includes","filter","n","checkBingo","isSubset","every","alert","rows","some","row","cols","_","i","diag1","diag2","countdownInterval","setInterval","clearInterval","startTimer","calledNumbersSet","Set","interval","size","call","letter","Math","floor","random","length","has","add","current","getColorClass","red","yellow","blue","orange","green","createElement","className","container","calledNumbersContainer","slice","map","index","key","calledNumber","fadeIn","bingoHeader","bingoHeaderCell","bingoBody","bingoRow","cell","bingoCell","marked","onClick","checkBingoButton"],"sources":["C:/Users/dagio/OneDrive/Documents/Projects/Bingo_React/src/components/GamePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport styles from './GamePage.module.css';\r\nconst BINGO_LETTERS = ['B', 'I', 'N', 'G', 'O'];\r\n\r\nconst GamePage = ({ bingoCard }) => {\r\n    const [markedNumbers, setMarkedNumbers] = useState([bingoCard[2][2]]); // Automatically mark the center cell\r\n    const [calledNumbers, setCalledNumbers] = useState([]);\r\n    const [currentCall, setCurrentCall] = useState('');\r\n    const [countdown, setCountdown] = useState(5); // Countdown state\r\n    const timerRef = useRef(null); // Use useRef to store the interval ID\r\n\r\n    // Toggle marking a number on the card\r\n    const toggleMarkNumber = (rowIndex, cellIndex) => {\r\n        const number = bingoCard[rowIndex][cellIndex];\r\n        setMarkedNumbers(prev =>\r\n            prev.includes(number) ? prev.filter(n => n !== number) : [...prev, number]\r\n        );\r\n    };\r\n\r\n    // Check if the player has won Bingo\r\n    const checkBingo = () => {\r\n        const isSubset = markedNumbers.every(number => calledNumbers.includes(number));\r\n        if (!isSubset) {\r\n            alert('Not Bingo yet! Keep going!');\r\n            return;\r\n        }\r\n\r\n        const rows = bingoCard.some(row => row.every(number => markedNumbers.includes(number)));\r\n        const cols = bingoCard[0].some((_, i) => bingoCard.every(row => markedNumbers.includes(row[i])));\r\n        const diag1 = bingoCard.every((row, i) => markedNumbers.includes(row[i]));\r\n        const diag2 = bingoCard.every((row, i) => markedNumbers.includes(row[4 - i]));\r\n\r\n        if (rows || cols || diag1 || diag2) {\r\n            alert('Bingo! You win!');\r\n        } else {\r\n            alert('Not Bingo yet! Keep going!');\r\n        }\r\n    };\r\n\r\n    // Update calledNumbers when currentCall changes\r\n    useEffect(() => {\r\n        if (currentCall) {\r\n            setCalledNumbers(prev => [...prev, currentCall]);\r\n        }\r\n    }, [currentCall]);\r\n\r\n    // Countdown effect\r\n    useEffect(() => {\r\n        if (countdown > 0) {\r\n            const countdownInterval = setInterval(() => {\r\n                setCountdown(prev => prev - 1);\r\n            }, 1000);\r\n            return () => clearInterval(countdownInterval);\r\n        }\r\n    }, [countdown]);\r\n\r\n    // Cleanup timer on component unmount\r\n    useEffect(() => {\r\n        const startTimer = () => {\r\n            const calledNumbersSet = new Set(calledNumbers);\r\n\r\n            const interval = setInterval(() => {\r\n                if (calledNumbersSet.size >= 75) {\r\n                    clearInterval(interval);\r\n                    return;\r\n                }\r\n\r\n                let call;\r\n                let number;\r\n                let letter;\r\n                // Generate a unique call\r\n                do {\r\n                    letter = BINGO_LETTERS[Math.floor(Math.random() * BINGO_LETTERS.length)];\r\n                    \r\n                    switch (letter) {\r\n                        case 'B': number = Math.floor(Math.random() * 15) + 1; break;\r\n                        case 'I': number = Math.floor(Math.random() * 15) + 16; break;\r\n                        case 'N': number = Math.floor(Math.random() * 15) + 31; break;\r\n                        case 'G': number = Math.floor(Math.random() * 15) + 46; break;\r\n                        case 'O': number = Math.floor(Math.random() * 15) + 61; break;\r\n                        default: number = Math.floor(Math.random() * 75) + 1;\r\n                    }\r\n\r\n                    call = `${letter}${number}`;\r\n                } while (calledNumbersSet.has(call));\r\n\r\n                calledNumbersSet.add(call);\r\n                setCurrentCall(call);\r\n                setCountdown(5); // Reset countdown\r\n            }, 5000);\r\n\r\n            timerRef.current = interval;\r\n        };\r\n\r\n        startTimer();\r\n        return () => {\r\n            clearInterval(timerRef.current);\r\n        };\r\n    }, [calledNumbers]);\r\n\r\n    const getColorClass = (call) => {\r\n        switch (call[0]) {\r\n            case 'B': return styles.red;\r\n            case 'I': return styles.yellow;\r\n            case 'N': return styles.blue;\r\n            case 'G': return styles.orange;\r\n            case 'O': return styles.green;\r\n            default: return '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.calledNumbersContainer}>\r\n                <h3>Called Numbers</h3>\r\n                <div className={styles.calledNumbers}>\r\n                    {calledNumbers.length > 0 ? calledNumbers.slice(-5).map((call, index) => (\r\n                        <div key={index} className={`${styles.calledNumber} ${getColorClass(call)} ${styles.fadeIn}`}>\r\n                            {call}\r\n                        </div>\r\n                    )) : <div>No numbers called yet</div>}\r\n                </div>\r\n            </div>\r\n            <div className={styles.currentCall}>\r\n                <h3>Current Call</h3>\r\n                {currentCall ? (\r\n                    <div className={`${styles.calledNumber} ${getColorClass(currentCall)} ${styles.fadeIn}`}>\r\n                        {currentCall}\r\n                    </div>\r\n                ) : (\r\n                    <div>No current call</div>\r\n                )}\r\n                <div className={styles.countdown}>\r\n                    Next call in: {countdown} seconds\r\n                </div>\r\n            </div>\r\n            <h2>Game Started</h2>\r\n            <div className={styles.bingoCard}>\r\n                <div className={styles.bingoHeader}>\r\n                    {BINGO_LETTERS.map((letter, index) => (\r\n                        <div key={index} className={`${styles.bingoHeaderCell} ${getColorClass(letter + '1')}`}>\r\n                            {letter}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className={styles.bingoBody}>\r\n                    {bingoCard.map((row, rowIndex) => (\r\n                        <div key={rowIndex} className={styles.bingoRow}>\r\n                            {row.map((cell, cellIndex) => (\r\n                                <div\r\n                                    key={cellIndex}\r\n                                    className={`${styles.bingoCell} ${markedNumbers.includes(cell) ? styles.marked : ''}`}\r\n                                    onClick={() => toggleMarkNumber(rowIndex, cellIndex)}\r\n                                >\r\n                                    {cell}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <button onClick={checkBingo} className={styles.checkBingoButton}>Check Bingo</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GamePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}